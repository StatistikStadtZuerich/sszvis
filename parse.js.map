{"version":3,"file":"parse.js","sources":["../src/parse.js"],"sourcesContent":["/**\n * Parsing functions\n *\n * @module sszvis/parse\n */\n\nimport { timeFormatLocale } from \"d3\";\nimport { locale } from \"./locale.js\";\n\nconst timeParse = timeFormatLocale(locale).parse;\n\n/**\n * Parse Swiss date strings\n * @param  {String} d A Swiss date string, e.g. 17.08.2014\n * @return {Date}\n */\nconst dateParser = timeParse(\"%d.%m.%Y\");\nexport const parseDate = function (d) {\n  return dateParser(d);\n};\n\n/**\n * Parse year values\n * @param  {string} d   A string which should be parsed as if it were a year, like \"2014\"\n * @return {Date}       A javascript date object for the first time in the given year\n */\nconst yearParser = timeParse(\"%Y\");\nexport const parseYear = function (d) {\n  return yearParser(d);\n};\n\n/**\n * Parse untyped input\n * @param  {String} d A value that could be a number\n * @return {Number}   If d is not a number, NaN is returned\n */\nexport const parseNumber = function (d) {\n  return d.trim() === \"\" ? Number.NaN : +d;\n};\n"],"names":["timeParse","timeFormatLocale","locale","parse","dateParser","parseDate","d","yearParser","parseYear","parseNumber","trim","Number","NaN"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAKA,MAAMA,SAAS,GAAGC,gBAAgB,CAACC,MAAM,CAAC,CAACC,KAAK;;AAEhD;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGJ,SAAS,CAAC,UAAU,CAAC;MAC3BK,SAAS,GAAG,UAAUC,CAAC,EAAE;EACpC,OAAOF,UAAU,CAACE,CAAC,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGP,SAAS,CAAC,IAAI,CAAC;MACrBQ,SAAS,GAAG,UAAUF,CAAC,EAAE;EACpC,OAAOC,UAAU,CAACD,CAAC,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;MACaG,WAAW,GAAG,UAAUH,CAAC,EAAE;AACtC,EAAA,OAAOA,CAAC,CAACI,IAAI,EAAE,KAAK,EAAE,GAAGC,MAAM,CAACC,GAAG,GAAG,CAACN,CAAC;AAC1C;;;;"}