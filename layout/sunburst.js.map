{"version":3,"file":"sunburst.js","sources":["../../src/layout/sunburst.js"],"sourcesContent":["/**\n * @module sszvis/layout/sunburst\n *\n * Helper functions for transforming your data to match the format required by the sunburst chart.\n */\n\nimport { max, min, partition } from \"d3\";\nimport { prepareHierarchyData } from \"./hierarchy.js\";\n\n/**\n * sszvis.layout.sunburst.prepareData\n *\n * @deprecated since v3.4.0 - use sszvis.layout.hierarchy.prepareHierarchyData instead\n */\nexport const prepareData = () => {\n  const hierarchyBuilder = prepareHierarchyData();\n  const api = {\n    calculate: (data) => {\n      const root = hierarchyBuilder.calculate(data);\n      partition()(root);\n      function flatten(node) {\n        return Array.prototype.concat.apply([node], (node.children || []).map(flatten));\n      }\n      return flatten(root).filter((d) => d.data._tag !== \"root\");\n    },\n    layer: (keyFunc) => {\n      hierarchyBuilder.layer(keyFunc);\n      return api;\n    },\n    value: (accfn) => {\n      hierarchyBuilder.value(accfn);\n      return api;\n    },\n    sort: (sortFunc) => {\n      hierarchyBuilder.sort(sortFunc);\n      return api;\n    },\n  };\n  return api;\n};\n\nexport const MAX_SUNBURST_RING_WIDTH = 60;\nconst MAX_RW = MAX_SUNBURST_RING_WIDTH;\n\nexport const MIN_SUNBURST_RING_WIDTH = 10;\nconst MIN_RW = MIN_SUNBURST_RING_WIDTH;\n\n/**\n * sszvis.layout.sunburst.computeLayout\n *\n * Computes layout parameters for good visual display of the sunburst chart.\n *\n * @param  {Number} numLayers          The number of layers in the sunburst chart.\n * @param  {Number} chartWidth         The total width available for displaying the sunburst chart.\n * @return {Object}                    Some parameters for the sunburst chart:\n *       @property {Number} centerRadius      The central radius of the chart (used by the sunburst component)\n *       @property {Number} numLayers         The number of layers in the chart (used by the sunburst component)\n *       @property {Number} ringWidth         The width of a single ring in the chart (used by the sunburst component)\n */\nexport const computeLayout = (numLayers, chartWidth) => {\n  // Diameter of the center circle is one-third the width\n  const halfWidth = chartWidth / 2;\n  const centerRadius = halfWidth / 3;\n  const ringWidth = Math.max(MIN_RW, Math.min(MAX_RW, (halfWidth - centerRadius) / numLayers));\n\n  return {\n    centerRadius,\n    numLayers,\n    ringWidth,\n  };\n};\n\n/**\n * sszvis.layout.sunburst.getRadiusExtent\n * @param  {Array} formattedData      An array of data to inspect for the extent of the radius scale\n *\n * @return {Array}                    The minimum and maximum radius values (in d3's partition layout's terms). Use this as\n *                                    The domain of the radius scale you use to configure the sunburst chart. This is a convenience\n *                                    function which abstracts away the way d3 stores positions within the partition layout used\n *                                    by the sunburst chart.\n */\nexport const getRadiusExtent = (formattedData) => {\n  return [min(formattedData, (d) => d.y0), max(formattedData, (d) => d.y1)];\n};\n"],"names":["prepareData","hierarchyBuilder","prepareHierarchyData","api","calculate","data","root","partition","flatten","node","Array","prototype","concat","apply","children","map","filter","d","_tag","layer","keyFunc","value","accfn","sort","sortFunc","MAX_SUNBURST_RING_WIDTH","MAX_RW","MIN_SUNBURST_RING_WIDTH","MIN_RW","computeLayout","numLayers","chartWidth","halfWidth","centerRadius","ringWidth","Math","max","min","getRadiusExtent","formattedData","y0","y1"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAW,GAAGA,MAAM;AAC/B,EAAA,MAAMC,gBAAgB,GAAGC,oBAAoB,EAAE;AAC/C,EAAA,MAAMC,GAAG,GAAG;IACVC,SAAS,EAAGC,IAAI,IAAK;AACnB,MAAA,MAAMC,IAAI,GAAGL,gBAAgB,CAACG,SAAS,CAACC,IAAI,CAAC;AAC7CE,MAAAA,SAAS,EAAE,CAACD,IAAI,CAAC;MACjB,SAASE,OAAOA,CAACC,IAAI,EAAE;QACrB,OAAOC,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,KAAK,CAAC,CAACJ,IAAI,CAAC,EAAE,CAACA,IAAI,CAACK,QAAQ,IAAI,EAAE,EAAEC,GAAG,CAACP,OAAO,CAAC,CAAC;AACjF,MAAA;AACA,MAAA,OAAOA,OAAO,CAACF,IAAI,CAAC,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACZ,IAAI,CAACa,IAAI,KAAK,MAAM,CAAC;IAC5D,CAAC;IACDC,KAAK,EAAGC,OAAO,IAAK;AAClBnB,MAAAA,gBAAgB,CAACkB,KAAK,CAACC,OAAO,CAAC;AAC/B,MAAA,OAAOjB,GAAG;IACZ,CAAC;IACDkB,KAAK,EAAGC,KAAK,IAAK;AAChBrB,MAAAA,gBAAgB,CAACoB,KAAK,CAACC,KAAK,CAAC;AAC7B,MAAA,OAAOnB,GAAG;IACZ,CAAC;IACDoB,IAAI,EAAGC,QAAQ,IAAK;AAClBvB,MAAAA,gBAAgB,CAACsB,IAAI,CAACC,QAAQ,CAAC;AAC/B,MAAA,OAAOrB,GAAG;AACZ,IAAA;GACD;AACD,EAAA,OAAOA,GAAG;AACZ;AAEO,MAAMsB,uBAAuB,GAAG;AACvC,MAAMC,MAAM,GAAGD,uBAAuB;AAE/B,MAAME,uBAAuB,GAAG;AACvC,MAAMC,MAAM,GAAGD,uBAAuB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaE,aAAa,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;AACtD;AACA,EAAA,MAAMC,SAAS,GAAGD,UAAU,GAAG,CAAC;AAChC,EAAA,MAAME,YAAY,GAAGD,SAAS,GAAG,CAAC;EAClC,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACR,MAAM,EAAEO,IAAI,CAACE,GAAG,CAACX,MAAM,EAAE,CAACM,SAAS,GAAGC,YAAY,IAAIH,SAAS,CAAC,CAAC;EAE5F,OAAO;IACLG,YAAY;IACZH,SAAS;AACTI,IAAAA;GACD;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMI,eAAe,GAAIC,aAAa,IAAK;EAChD,OAAO,CAACF,GAAG,CAACE,aAAa,EAAGtB,CAAC,IAAKA,CAAC,CAACuB,EAAE,CAAC,EAAEJ,GAAG,CAACG,aAAa,EAAGtB,CAAC,IAAKA,CAAC,CAACwB,EAAE,CAAC,CAAC;AAC3E;;;;"}