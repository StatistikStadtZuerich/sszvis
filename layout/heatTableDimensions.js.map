{"version":3,"file":"heatTableDimensions.js","sources":["../../src/layout/heatTableDimensions.js"],"sourcesContent":["/**\n * Heat Table Dimensions\n *\n * Utility function for calculating different demensions in the heat table\n *\n * @module sszvis/layout/heatTableDimensions\n *\n * @param  {Number} spaceWidth   the total available width for the heat table within its container\n * @param  {Number} squarePadding the padding, in pixels, between squares in the heat table\n * @param  {Number} numX     The number of columns that need to fit within the heat table width\n * @param {Number} numY The number of rows in the table\n * @param {Object} [chartPadding] An object that includes padding values for the left, right, top,\n *                              and bottom padding which the heat table should have within its container.\n *                              These padding values should be enough to include any axis labels or other things\n *                              that show up around the table itself. The heat table will then fill the rest\n *                              of the available space as appropriate (up to a certain maximum size of box)\n * @return {object}         An object with dimension information about the heat table:\n *                          {\n *                              side: the length of one side of a table box\n *                              paddedSide: the length of the side plus padding\n *                              padRatio: the ratio of padding to paddedSide (used for configuring d3.scaleOrdinal.rangeBands as the second parameter)\n *                              width: the total width of all table boxes plus padding in between\n *                              height: the total height of all table boxes plus padding in between\n *                              centeredOffset: the left offset required to center the table horizontally within its container\n *                          }\n */\n\nexport default function (spaceWidth, squarePadding, numX, numY, chartPadding) {\n  chartPadding || (chartPadding = {});\n  chartPadding.top || (chartPadding.top = 0);\n  chartPadding.right || (chartPadding.right = 0);\n  chartPadding.bottom || (chartPadding.bottom = 0);\n  chartPadding.left || (chartPadding.left = 0);\n\n  // this includes the default side length for the heat table\n  const DEFAULT_SIDE = 30,\n    availableChartWidth = spaceWidth - chartPadding.left - chartPadding.right,\n    side = Math.min((availableChartWidth - squarePadding * (numX - 1)) / numX, DEFAULT_SIDE),\n    paddedSide = side + squarePadding,\n    padRatio = 1 - side / paddedSide,\n    tableWidth = numX * paddedSide - squarePadding, // subtract the squarePadding at the end\n    tableHeight = numY * paddedSide - squarePadding; // subtract the squarePadding at the end\n  return {\n    side,\n    paddedSide,\n    padRatio,\n    width: tableWidth,\n    height: tableHeight,\n    centeredOffset: Math.max((availableChartWidth - tableWidth) / 2, 0),\n  };\n}\n"],"names":["spaceWidth","squarePadding","numX","numY","chartPadding","top","right","bottom","left","DEFAULT_SIDE","availableChartWidth","side","Math","min","paddedSide","padRatio","tableWidth","tableHeight","width","height","centeredOffset","max"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4BAAA,EAAUA,UAAU,EAAEC,aAAa,EAAEC,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAE;AAC5EA,EAAAA,YAAY,KAAKA,YAAY,GAAG,EAAE,CAAC;EACnCA,YAAY,CAACC,GAAG,KAAKD,YAAY,CAACC,GAAG,GAAG,CAAC,CAAC;EAC1CD,YAAY,CAACE,KAAK,KAAKF,YAAY,CAACE,KAAK,GAAG,CAAC,CAAC;EAC9CF,YAAY,CAACG,MAAM,KAAKH,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;EAChDH,YAAY,CAACI,IAAI,KAAKJ,YAAY,CAACI,IAAI,GAAG,CAAC,CAAC;;AAE5C;EACA,MAAMC,YAAY,GAAG,EAAE;IACrBC,mBAAmB,GAAGV,UAAU,GAAGI,YAAY,CAACI,IAAI,GAAGJ,YAAY,CAACE,KAAK;AACzEK,IAAAA,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACH,mBAAmB,GAAGT,aAAa,IAAIC,IAAI,GAAG,CAAC,CAAC,IAAIA,IAAI,EAAEO,YAAY,CAAC;IACxFK,UAAU,GAAGH,IAAI,GAAGV,aAAa;AACjCc,IAAAA,QAAQ,GAAG,CAAC,GAAGJ,IAAI,GAAGG,UAAU;AAChCE,IAAAA,UAAU,GAAGd,IAAI,GAAGY,UAAU,GAAGb,aAAa;AAAE;AAChDgB,IAAAA,WAAW,GAAGd,IAAI,GAAGW,UAAU,GAAGb,aAAa,CAAC;EAClD,OAAO;IACLU,IAAI;IACJG,UAAU;IACVC,QAAQ;AACRG,IAAAA,KAAK,EAAEF,UAAU;AACjBG,IAAAA,MAAM,EAAEF,WAAW;AACnBG,IAAAA,cAAc,EAAER,IAAI,CAACS,GAAG,CAAC,CAACX,mBAAmB,GAAGM,UAAU,IAAI,CAAC,EAAE,CAAC;GACnE;AACH;;;;"}