{"version":3,"file":"horizontalBarChartDimensions.js","sources":["../../src/layout/horizontalBarChartDimensions.js"],"sourcesContent":["/**\n * Horizontal Bar Chart Dimensions\n *\n * This function calculates dimensions for the horizontal bar chart. It encapsulates the\n * layout algorithm for sszvis horizontal bar charts. The object it returns contains several\n * properties which can be used in other functions and components for layout purposes.\n *\n * @module sszvis/layout/horizontalBarChartDimensions\n *\n * @param  {number} numBars     the number of bars in the horizontal bar chart\n * @return {object}             an object containing properties used for layout:\n *                                 {\n *                                  barHeight: the height of an individual bar\n *                                  padHeight: the height of the padding between each bar\n *                                  padRatio: the ratio of padding to barHeight + padding.\n *                                            this can be passed as the second argument to d3.scaleOrdinal().rangeBands\n *                                  outerRatio: the ratio of outer padding to barHeight + padding.\n *                                              this can be passed as the third parameter to d3.scaleOrdinal().rangeBands\n *                                  axisOffset: the amount by which to vertically offset the y-axis of the horizontal bar chart\n *                                              in order to ensure that the axis labels are visible. This can be used as the y-component\n *                                              of a call to sszvis.svgUtils.translateString.\n *                                  barGroupHeight: the combined height of all the bars and their inner padding.\n *                                  totalHeight: barGroupHeight plus the height of the outerPadding. This distance can be used\n *                                               to translate scales below the bars.\n *                                 }\n */\n\nexport default function (numBars) {\n  const DEFAULT_HEIGHT = 24, // the default bar height\n    MIN_PADDING = 20, // the minimum padding size\n    barHeight = DEFAULT_HEIGHT, // the bar height\n    numPads = numBars - 1,\n    padding = MIN_PADDING,\n    // compute other information\n    padRatio = 1 - barHeight / (barHeight + padding),\n    computedBarSpace = barHeight * numBars + padding * numPads,\n    outerRatio = 0; // no outer padding\n\n  return {\n    barHeight,\n    padHeight: padding,\n    padRatio,\n    outerRatio,\n    axisOffset: -(barHeight / 2) - 10,\n    barGroupHeight: computedBarSpace,\n    totalHeight: computedBarSpace + outerRatio * (barHeight + padding) * 2,\n  };\n}\n"],"names":["numBars","DEFAULT_HEIGHT","MIN_PADDING","barHeight","numPads","padding","padRatio","computedBarSpace","outerRatio","padHeight","axisOffset","barGroupHeight","totalHeight"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qCAAA,EAAUA,OAAO,EAAE;EAChC,MAAMC,cAAc,GAAG,EAAE;AAAE;AACzBC,IAAAA,WAAW,GAAG,EAAE;AAAE;AAClBC,IAAAA,SAAS,GAAGF,cAAc;AAAE;IAC5BG,OAAO,GAAGJ,OAAO,GAAG,CAAC;AACrBK,IAAAA,OAAO,GAAGH,WAAW;AACrB;IACAI,QAAQ,GAAG,CAAC,GAAGH,SAAS,IAAIA,SAAS,GAAGE,OAAO,CAAC;AAChDE,IAAAA,gBAAgB,GAAGJ,SAAS,GAAGH,OAAO,GAAGK,OAAO,GAAGD,OAAO;IAC1DI,UAAU,GAAG,CAAC,CAAC;;EAEjB,OAAO;IACLL,SAAS;AACTM,IAAAA,SAAS,EAAEJ,OAAO;IAClBC,QAAQ;IACRE,UAAU;AACVE,IAAAA,UAAU,EAAE,GAAgB,GAAG,EAAE;AACjCC,IAAAA,cAAc,EAAEJ,gBAAgB;IAChCK,WAAW,EAAEL,gBAAgB,GAAGC,UAAU,IAAIL,SAAS,GAAGE,OAAO,CAAC,GAAG;GACtE;AACH;;;;"}