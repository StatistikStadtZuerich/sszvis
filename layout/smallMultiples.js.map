{"version":3,"file":"smallMultiples.js","sources":["../../src/layout/smallMultiples.js"],"sourcesContent":["/**\n * Small Multiples layout\n *\n * Used to generate group elements which contain small multiples charts.\n *\n * This component lays out rectangular groups in a grid according to the number of rows\n * and the number of columns provided. It is possible to specify paddingX and paddingY\n * values, pixel amounts which will be left as empty space between the columns and the\n * rows, respectively.\n *\n * Data should be passed to this component in a special way: it should be an array of\n * data values, where each data value represents a single group. IMPORTANT: each data\n * value must also have a property called 'values' which represents the values corresponding\n * to that group.\n *\n * In the multiple pie charts example, an array of \"groups\" data is bound to the chart before\n * the multiples component is called. Each element in the \"groups\" data has a values property\n * which contains the data for a single pie chart.\n *\n * The multiples component creates the groups and lays them out, attaching the following new properties\n * to each group object:\n *\n * gx - the x-position of the group\n * gy - the y-position of the group\n * gw - the width of the group (without padding)\n * gh - the height of the group (without padding)\n *\n * Generally, you should not use source data objects as group objects, but should instead\n * create new objects which are used to store group information. This creates a data hierarchy\n * which matches the representation hierarchy, which is very much a d3 pattern.\n *\n * Once the groups have been created, the user must still do something with them. The pattern\n * for creating charts within each group should look something like:\n *\n * chart.selectAll('.sszvis-multiple')\n *   .each(function(d) {\n *     var groupSelection = select(this);\n *\n *     ... do something which creates a chart using groupSelection ...\n *   });\n *\n * @module sszvis/layout/smallMultiples\n *\n * @property {number} width           the total width of the collection of multiples\n * @property {number} height          the total height of the collection of multiples\n * @property {number} paddingX        x-padding to put between columns\n * @property {number} paddingY        y-padding to put between rows\n * @property {number} rows            the number of rows to generate\n * @property {number} cols            the number of columns to generate\n *\n * @return {sszvis.component}\n */\n\nimport { select } from \"d3\";\nimport { component } from \"../d3-component.js\";\n\nexport default function () {\n  return component()\n    .prop(\"width\")\n    .prop(\"height\")\n    .prop(\"paddingX\")\n    .prop(\"paddingY\")\n    .prop(\"rows\")\n    .prop(\"cols\")\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const unitWidth = (props.width - props.paddingX * (props.cols - 1)) / props.cols;\n      const unitHeight = (props.height - props.paddingY * (props.rows - 1)) / props.rows;\n\n      const horizontalCenter = unitWidth / 2;\n      const verticalCenter = unitHeight / 2;\n\n      const multiples = selection\n        .selectAll(\"g.sszvis-multiple\")\n        .data(data)\n        .join(\"g\")\n        .classed(\"sszvis-g sszvis-multiple\", true);\n\n      multiples\n        .selectAll(\"g.sszvis-multiple-chart\")\n        .data((d) => [d.values])\n        .join(\"g\")\n        .classed(\"sszvis-multiple-chart\", true);\n\n      multiples\n        .datum((d, i) => {\n          d.gx = (i % props.cols) * (unitWidth + props.paddingX);\n          d.gw = unitWidth;\n          d.cx = horizontalCenter;\n          d.gy = Math.floor(i / props.cols) * (unitHeight + props.paddingY);\n          d.gh = unitHeight;\n          d.cy = verticalCenter;\n          return d;\n        })\n        .attr(\"transform\", (d) => \"translate(\" + d.gx + \",\" + d.gy + \")\");\n    });\n}\n"],"names":["component","prop","render","data","selection","select","props","unitWidth","width","paddingX","cols","unitHeight","height","paddingY","rows","horizontalCenter","verticalCenter","multiples","selectAll","join","classed","d","values","datum","i","gx","gw","cx","gy","Math","floor","gh","cy","attr"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKe,uBAAY,IAAA;AACzB,EAAA,OAAOA,SAAS,EAAE,CACfC,IAAI,CAAC,OAAO,CAAC,CACbA,IAAI,CAAC,QAAQ,CAAC,CACdA,IAAI,CAAC,UAAU,CAAC,CAChBA,IAAI,CAAC,UAAU,CAAC,CAChBA,IAAI,CAAC,MAAM,CAAC,CACZA,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC,UAAUC,IAAI,EAAE;AACtB,IAAA,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;AAC9B,IAAA,MAAMC,KAAK,GAAGF,SAAS,CAACE,KAAK,EAAE;IAE/B,MAAMC,SAAS,GAAG,CAACD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACI,IAAI,GAAG,CAAC,CAAC,IAAIJ,KAAK,CAACI,IAAI;IAChF,MAAMC,UAAU,GAAG,CAACL,KAAK,CAACM,MAAM,GAAGN,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACQ,IAAI,GAAG,CAAC,CAAC,IAAIR,KAAK,CAACQ,IAAI;AAElF,IAAA,MAAMC,gBAAgB,GAAGR,SAAS,GAAG,CAAC;AACtC,IAAA,MAAMS,cAAc,GAAGL,UAAU,GAAG,CAAC;IAErC,MAAMM,SAAS,GAAGb,SAAS,CACxBc,SAAS,CAAC,mBAAmB,CAAC,CAC9Bf,IAAI,CAACA,IAAI,CAAC,CACVgB,IAAI,CAAC,GAAG,CAAC,CACTC,OAAO,CAAC,0BAA0B,EAAE,IAAI,CAAC;IAE5CH,SAAS,CACNC,SAAS,CAAC,yBAAyB,CAAC,CACpCf,IAAI,CAAEkB,CAAC,IAAK,CAACA,CAAC,CAACC,MAAM,CAAC,CAAC,CACvBH,IAAI,CAAC,GAAG,CAAC,CACTC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC;AAEzCH,IAAAA,SAAS,CACNM,KAAK,CAAC,CAACF,CAAC,EAAEG,CAAC,KAAK;AACfH,MAAAA,CAAC,CAACI,EAAE,GAAID,CAAC,GAAGlB,KAAK,CAACI,IAAI,IAAKH,SAAS,GAAGD,KAAK,CAACG,QAAQ,CAAC;MACtDY,CAAC,CAACK,EAAE,GAAGnB,SAAS;MAChBc,CAAC,CAACM,EAAE,GAAGZ,gBAAgB;AACvBM,MAAAA,CAAC,CAACO,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACN,CAAC,GAAGlB,KAAK,CAACI,IAAI,CAAC,IAAIC,UAAU,GAAGL,KAAK,CAACO,QAAQ,CAAC;MACjEQ,CAAC,CAACU,EAAE,GAAGpB,UAAU;MACjBU,CAAC,CAACW,EAAE,GAAGhB,cAAc;AACrB,MAAA,OAAOK,CAAC;KACT,CAAC,CACDY,IAAI,CAAC,WAAW,EAAGZ,CAAC,IAAK,YAAY,GAAGA,CAAC,CAACI,EAAE,GAAG,GAAG,GAAGJ,CAAC,CAACO,EAAE,GAAG,GAAG,CAAC;AACrE,GAAC,CAAC;AACN;;;;"}