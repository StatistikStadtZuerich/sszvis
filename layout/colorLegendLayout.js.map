{"version":3,"file":"colorLegendLayout.js","sources":["../../src/layout/colorLegendLayout.js"],"sourcesContent":["import { max, sum } from \"d3\";\nimport { scaleQual12, scaleQual6 } from \"../color\";\nimport {\n  DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT,\n  legendColorOrdinal,\n} from \"../legend/ordinalColorScale\";\nimport { measureAxisLabel, measureDimensions, measureLegendLabel } from \"../measure\";\n\nconst DEFAULT_COLUMN_COUNT = 2;\nconst LABEL_PADDING = 40;\n\n/**\n * colorLegendLayout\n *\n * Generate a color scale and a legend for the given labels. Compute how much\n * padding labels plus legend needs for use with `sszvis.bounds()`\n */\nexport function colorLegendLayout(\n  { legendLabels, axisLabels = [], slant = \"horizontal\" },\n  container\n) {\n  const containerWidth = measureDimensions(container).width;\n  const layout = colorLegendDimensions(legendLabels, containerWidth);\n  const scale =\n    legendLabels.length > 6\n      ? scaleQual12().domain(legendLabels)\n      : scaleQual6().domain(legendLabels);\n\n  const legend = legendColorOrdinal()\n    .scale(scale)\n    .horizontalFloat(layout.horizontalFloat)\n    .rows(layout.rows)\n    .columnWidth(layout.columnWidth)\n    .orientation(layout.orientation);\n\n  const axisLabelPadding = axisLabelHeight(slant, axisLabels);\n  const legendPadding = layout.rows * DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT;\n\n  return {\n    axisLabelPadding,\n    legendPadding,\n    bottomPadding: axisLabelPadding + legendPadding,\n    legendWidth: layout.legendWidth,\n    legend,\n    scale,\n  };\n}\n\n/**\n * colorLegendDimensions\n *\n * Compute all the dimensions necessary to generate an ordinal color legend.\n */\nexport function colorLegendDimensions(labels, containerWidth) {\n  const labelCount = labels.length;\n  const maxLabelWidth = max(labels, labelWidth);\n  const totalLabelsWidth = sum(labels, labelWidth);\n\n  // Use a single column for four or fewer items\n  const columns =\n    labelCount <= 4 ? 1 : numCols(containerWidth, maxLabelWidth, DEFAULT_COLUMN_COUNT);\n\n  // Use a horizontal layout if all labels fit on one line\n  const isHorizontal = columns === 1 && totalLabelsWidth <= containerWidth;\n\n  return {\n    columns,\n    rows: isHorizontal ? 1 : Math.ceil(labelCount / columns),\n    columnWidth: columns === 1 ? null : maxLabelWidth,\n    legendWidth: columns * maxLabelWidth,\n    horizontalFloat: isHorizontal,\n    orientation: isHorizontal ? null : \"vertical\",\n  };\n}\n\n// -----------------------------------------------------------------------------\n// Helpers\n\nfunction axisLabelHeight(slant, labels) {\n  switch (slant) {\n    case \"vertical\": {\n      return 40 + max(labels, measureAxisLabel);\n    }\n    case \"diagonal\": {\n      return 40 + Math.sqrt(2 * Math.pow(max(labels, measureAxisLabel) / 2, 2));\n    }\n    default: {\n      return 60;\n    }\n  }\n}\n\nfunction labelWidth(label) {\n  return measureLegendLabel(label) + LABEL_PADDING;\n}\n\nfunction numCols(totalWidth, columnWidth, num) {\n  if (num <= 1) return 1;\n  return columnWidth <= totalWidth / num ? num : numCols(totalWidth, columnWidth, num - 1);\n}\n"],"names":["DEFAULT_COLUMN_COUNT","LABEL_PADDING","colorLegendLayout","_ref","container","legendLabels","axisLabels","slant","containerWidth","measureDimensions","width","layout","colorLegendDimensions","scale","length","scaleQual12","domain","scaleQual6","legend","legendColorOrdinal","horizontalFloat","rows","columnWidth","orientation","axisLabelPadding","axisLabelHeight","legendPadding","DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT","bottomPadding","legendWidth","labels","labelCount","maxLabelWidth","max","labelWidth","totalLabelsWidth","sum","columns","numCols","isHorizontal","Math","ceil","measureAxisLabel","sqrt","pow","label","measureLegendLabel","totalWidth","num"],"mappings":"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"}