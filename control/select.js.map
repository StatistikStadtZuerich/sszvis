{"version":3,"file":"select.js","sources":["../../src/control/select.js"],"sourcesContent":["/**\n * Select control\n *\n * Control for switching top-level filter values. Use this control for changing between several\n * options which affect the state of the chart. This component should be rendered into an html layer.\n *\n * This control is part of the `optionSelectable` class of controls and can be used interchangeably\n * with other controls of this class (sszvis.control.buttonGroup).\n *\n * @module sszvis/control/select\n *\n * @property {array} values         an array of values which are the options available in the control.\n * @property {any} current          the currently selected value of the select control. Should be one of the options passed to .values()\n * @property {number} width         The total width of the select control. If text labels exceed this width they will be trimmed to fit using an ellipsis mark. (default: 300px)\n * @property {function} change      A callback/event handler function to call when the user clicks on a value.\n *                                  Note that clicking on a value does not necessarily change any state unless this callback function does something.\n *\n * @return {sszvis.component}\n */\n\nimport { select } from \"d3\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\n\nexport default function () {\n  return component()\n    .prop(\"values\")\n    .prop(\"current\")\n    .prop(\"width\")\n    .width(300)\n    .prop(\"change\")\n    .change(fn.identity)\n    .render(function () {\n      const selection = select(this);\n      const props = selection.props();\n\n      const wrapperEl = selection\n        .selectAll(\".sszvis-control-optionSelectable\")\n        .data([\"sszvis-control-select\"], (d) => d)\n        .join(\"div\")\n        .classed(\"sszvis-control-optionSelectable\", true)\n        .classed(\"sszvis-control-select\", true);\n\n      wrapperEl.style(\"width\", props.width + \"px\");\n\n      const metricsEl = wrapperEl\n        .selectDiv(\"selectMetrics\")\n        .classed(\"sszvis-control-select__metrics\", true);\n\n      const selectEl = wrapperEl\n        .selectAll(\".sszvis-control-select__element\")\n        .data([1])\n        .join(\"select\")\n        .classed(\"sszvis-control-select__element\", true)\n        .on(\"change\", function (e) {\n          // We store the index in the select's value instead of the datum\n          // because an option's value can only hold strings.\n          const i = select(this).property(\"value\");\n          props.change(e, props.values[i]);\n          // Prevent highlights on the select element after users have selected\n          // an option by moving away from it.\n          setTimeout(() => {\n            window.focus();\n          }, 0);\n        });\n\n      selectEl.style(\"width\", props.width + 30 + \"px\");\n\n      selectEl\n        .selectAll(\"option\")\n        .data(props.values)\n        .join(\"option\")\n        .attr(\"selected\", (d) => (d === props.current ? \"selected\" : null))\n        .attr(\"value\", (d, i) => i)\n        .text((d) => truncateToWidth(metricsEl, props.width - 40, d));\n    });\n}\n\nfunction truncateToWidth(metricsEl, maxWidth, originalString) {\n  const MAX_RECURSION = 1000;\n  const fitText = (str, i) => {\n    metricsEl.text(str);\n    const textWidth = Math.ceil(metricsEl.node().clientWidth);\n    return i < MAX_RECURSION && textWidth > maxWidth ? fitText(str.slice(0, -2) + \"â€¦\", i + 1) : str;\n  };\n  return fitText(originalString, 0);\n}\n"],"names":["component","prop","width","change","fn","render","selection","select","props","wrapperEl","selectAll","data","d","join","classed","style","metricsEl","selectDiv","selectEl","on","e","i","property","values","setTimeout","window","focus","attr","current","text","truncateToWidth","maxWidth","originalString","MAX_RECURSION","fitText","str","textWidth","Math","ceil","node","clientWidth","slice"],"mappings":"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"}