{"version":3,"file":"dot.js","sources":["../../src/component/dot.js"],"sourcesContent":["/**\n * Dot component\n *\n * Used to render small circles, where each circle corresponds to a data value. The dot component\n * is built on rendering svg circles, so the configuration properties are directly mapped to circle attributes.\n *\n * @module sszvis/component/dot\n *\n * @property {number, function} x               An accessor function or number for the x-position of the dots.\n * @property {number, function} y               An accessor function or number for the y-position of the dots.\n * @property {number, function} radius          An accessor function or number for the radius of the dots.\n * @property {string, function} stroke          An accessor function or string for the stroke color of the dots.\n * @property {string, function} fill            An accessor function or string for the fill color of the dots.\n *\n * @return {sszvis.component}\n */\n\nimport { select } from \"d3\";\nimport tooltipAnchor from \"../annotation/tooltipAnchor.js\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\nimport { defaultTransition } from \"../transition.js\";\n\nexport default function () {\n  return component()\n    .prop(\"x\", fn.functor)\n    .prop(\"y\", fn.functor)\n    .prop(\"radius\")\n    .prop(\"stroke\")\n    .prop(\"fill\")\n    .prop(\"transition\")\n    .transition(true)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      let dots = selection\n        .selectAll(\".sszvis-circle\")\n        .data(data)\n        .join(\"circle\")\n        .classed(\"sszvis-circle\", true)\n        .attr(\"cx\", props.x)\n        .attr(\"cy\", props.y)\n        .attr(\"r\", props.radius)\n        .attr(\"stroke\", props.stroke)\n        .attr(\"fill\", props.fill);\n\n      if (props.transition) {\n        dots = dots.transition(defaultTransition());\n      }\n\n      dots.attr(\"cx\", props.x).attr(\"cy\", props.y).attr(\"r\", props.radius);\n\n      // Tooltip anchors\n\n      const ta = tooltipAnchor().position((d) => [props.x(d), props.y(d)]);\n\n      selection.call(ta);\n    });\n}\n"],"names":["component","prop","fn","transition","render","data","selection","select","props","dots","selectAll","join","classed","attr","x","y","radius","stroke","fill","defaultTransition","ta","tooltipAnchor","position","d","call"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQe,YAAA,IAAY;EACzB,OAAOA,SAAS,EAAE,CACfC,IAAI,CAAC,GAAG,EAAEC,OAAU,CAAC,CACrBD,IAAI,CAAC,GAAG,EAAEC,OAAU,CAAC,CACrBD,IAAI,CAAC,QAAQ,CAAC,CACdA,IAAI,CAAC,QAAQ,CAAC,CACdA,IAAI,CAAC,MAAM,CAAC,CACZA,IAAI,CAAC,YAAY,CAAC,CAClBE,UAAU,CAAC,IAAI,CAAC,CAChBC,MAAM,CAAC,UAAUC,IAAI,EAAE;AACtB,IAAA,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;AAC9B,IAAA,MAAMC,KAAK,GAAGF,SAAS,CAACE,KAAK,EAAE;AAE/B,IAAA,IAAIC,IAAI,GAAGH,SAAS,CACjBI,SAAS,CAAC,gBAAgB,CAAC,CAC3BL,IAAI,CAACA,IAAI,CAAC,CACVM,IAAI,CAAC,QAAQ,CAAC,CACdC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAC9BC,IAAI,CAAC,IAAI,EAAEL,KAAK,CAACM,CAAC,CAAC,CACnBD,IAAI,CAAC,IAAI,EAAEL,KAAK,CAACO,CAAC,CAAC,CACnBF,IAAI,CAAC,GAAG,EAAEL,KAAK,CAACQ,MAAM,CAAC,CACvBH,IAAI,CAAC,QAAQ,EAAEL,KAAK,CAACS,MAAM,CAAC,CAC5BJ,IAAI,CAAC,MAAM,EAAEL,KAAK,CAACU,IAAI,CAAC;IAE3B,IAAIV,KAAK,CAACL,UAAU,EAAE;MACpBM,IAAI,GAAGA,IAAI,CAACN,UAAU,CAACgB,iBAAiB,EAAE,CAAC;AAC7C,IAAA;IAEAV,IAAI,CAACI,IAAI,CAAC,IAAI,EAAEL,KAAK,CAACM,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,EAAEL,KAAK,CAACO,CAAC,CAAC,CAACF,IAAI,CAAC,GAAG,EAAEL,KAAK,CAACQ,MAAM,CAAC;;AAEpE;;IAEA,MAAMI,EAAE,GAAGC,aAAa,EAAE,CAACC,QAAQ,CAAEC,CAAC,IAAK,CAACf,KAAK,CAACM,CAAC,CAACS,CAAC,CAAC,EAAEf,KAAK,CAACO,CAAC,CAACQ,CAAC,CAAC,CAAC,CAAC;AAEpEjB,IAAAA,SAAS,CAACkB,IAAI,CAACJ,EAAE,CAAC;AACpB,EAAA,CAAC,CAAC;AACN;;;;"}