{"version":3,"file":"sankey.js","sources":["../../src/component/sankey.js"],"sourcesContent":["/**\n * Sankey component\n *\n * This component is used for making sankey diagrams, also known as parallel sets diagrams. They\n * depict individual entities as bars, and flows between those entities as thick links connecting\n * those bars. The entities can be many things associated with flows, for example organizations,\n * geographic regions, or websites, while the links between them can represent many kinds of flows,\n * for example payments of money, movements of people, or referral of browsing traffic. In this component,\n * the entities are referred to as 'nodes', and the connections between them are referred to as 'links'.\n *\n * @module sszvis/component/sankey\n *\n * @property {Function} sizeScale                    A scale function for the size of the nodes. The domain and the range should\n *                                                   be configured using values returned by the sszvis.layout.sankey.computeLayout\n *                                                   function.\n * @property {Function} columnPosition               A scale function for the position of the columns of nodes.\n *                                                   Should be configured using a value returned by the sszvis.layout.sankey.computeLayout function.\n * @property {Number} nodeThickness                  A number for the horizontal thickness of the node bars.\n *                                                   Should be configured using a value returned by the sszvis.layout.sankey.computeLayout function.\n * @property {Number} nodePadding                    A number for padding between the nodes.\n *                                                   Should be configured using a value returned by the sszvis.layout.sankey.computeLayout function.\n * @property {Number, Function} columnPadding        A number, or function that takes a column index and returns a number,\n *                                                   for padding at the top of each column. Used to vertically center the columns.\n * @property {String, Function} columnLabel          A string, or a function that returns a string, for the label at the top of each column.\n * @property {Number} columnLabelOffset              A value for offsetting the column labels in the x axis. Used to move the column labels around if you\n *                                                   don't want them to be centered on the columns. This is useful in situations where the normal label would\n *                                                   overlap outer boundaries or otherwise be inconveniently positioned. You can usually forget this, except\n *                                                   perhaps in very narrow screen layouts.\n * @property {Number} linkCurvature                  A number to specify the amount of 'curvature' of the links. Should be between 0 and 1. Default 0.5.\n * @property {Color, Function} nodeColor             Color for the nodes. Can be a function that takes a node's data and returns a color.\n * @property {Color, Function} linkColor             Color for the links. Can be a function that takes a link's data and returns a color.\n * @property {Function} linkSort                     A function determining how to sort the links, which are rendered stacked on top of each other.\n *                                                   The default implementation stacks links in decresing order of value, i.e. larger, thicker links\n *                                                   are below smaller, thinner ones.\n * @property {String, Function} labelSide            A function determining the position of labels for the nodes. Should take a column index and\n *                                                   return a side ('left' or 'right'). Default is always 'left'.\n * @property {Boolean} labelSideSwitch               A boolean used to determine whether to switch the label side. When true, 'left' labels will be shown on\n *                                                   the right side, and 'right' labels on the left side. This is useful as a switch to be flipped in very\n *                                                   narrow screen layouts, when you want the labels to appear on the opposite side of the columns they refer to.\n * @property {Number} labelOpacity                   A value for the opacity of the column labels. You can change this to affect the visibility of the column\n *                                                   labels, for instance to hide them when they would overlap with user-triggered hover labels.\n * @property {Number} labelHitBoxSize                A number for the width of 'hit boxes' added underneath the labels. This should basically be\n *                                                   equal to the width of the widest label. For performance reasons, it doesn't make sense to calculate\n *                                                   this value at run time while the component is rendered. Far better is to position the chart so that the\n *                                                   labels are visible, find the value of the widest label, and use that.\n * @property {Function} nameLabel                    A function which takes the id of a node and should return the label for that node. Defaults tousing\n *                                                   the id directly.\n * @property {Array} linkSourceLabels                An array containing the data for links which should have labels on their 'source' end, that is the\n *                                                   end of the link which is connected to the source node. These data values should match the values\n *                                                   returned by sszvis.layout.sankey.prepareData. For performance reasons, you need to give the data\n *                                                   values themselves here. See the examples for an implementation of the most straightforward\n *                                                   mechanism for this.\n * @property {Array} linkTargetLabels                An array containing data for links which should have labels on their 'target' end, that is the\n *                                                   end of the link which is connected to the target node. Works the same as linkSourceLabels, but used\n *                                                   for another set of possible link labels.\n * @property {String, Function} linkLabel            A string or function returning a string to use for the label of each link. Function\n *                                                   versions should accept a link datum (like the ones passed into linkSourceLabels or linkTargetLabels)\n *                                                   and return text.\n *\n * @return {sszvis.component}\n */\n\nimport { interpolateNumber, select } from \"d3\";\nimport tooltipAnchor from \"../annotation/tooltipAnchor.js\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\nimport { halfPixel } from \"../svgUtils/crisp.js\";\nimport translateString from \"../svgUtils/translateString.js\";\nimport bar from \"./bar.js\";\n\nconst linkPathString = (x0, x1, x2, x3, y0, y1) =>\n  \"M\" + x0 + \",\" + y0 + \"C\" + x1 + \",\" + y0 + \" \" + x2 + \",\" + y1 + \" \" + x3 + \",\" + y1;\nconst linkBounds = (x0, x1, y0, y1) => [x0, x1, y0, y1];\n\nexport default function () {\n  return component()\n    .prop(\"sizeScale\")\n    .prop(\"columnPosition\")\n    .prop(\"nodeThickness\")\n    .prop(\"nodePadding\")\n    .prop(\"columnPadding\", fn.functor)\n    .prop(\"columnLabel\", fn.functor)\n    .columnLabel(\"\")\n    .prop(\"columnLabelOffset\", fn.functor)\n    .columnLabelOffset(0)\n    .prop(\"linkCurvature\")\n    .linkCurvature(0.5)\n    .prop(\"nodeColor\", fn.functor)\n    .prop(\"linkColor\", fn.functor)\n    .prop(\"linkSort\", fn.functor)\n    .linkSort((a, b) => a.value - b.value) // Default sorts in descending order of value\n    .prop(\"labelSide\", fn.functor)\n    .labelSide(\"left\")\n    .prop(\"labelSideSwitch\")\n    .prop(\"labelOpacity\", fn.functor)\n    .labelOpacity(1)\n    .prop(\"labelHitBoxSize\")\n    .labelHitBoxSize(0)\n    .prop(\"nameLabel\")\n    .nameLabel(fn.identity)\n    .prop(\"linkSourceLabels\")\n    .linkSourceLabels([])\n    .prop(\"linkTargetLabels\")\n    .linkTargetLabels([])\n    .prop(\"linkLabel\", fn.functor)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const idAcc = fn.prop(\"id\");\n\n      const getNodePosition = (node) =>\n        Math.floor(\n          props.columnPadding(node.columnIndex) +\n            props.sizeScale(node.valueOffset) +\n            props.nodePadding * node.nodeIndex\n        );\n      const xPosition = (node) => props.columnPosition(node.columnIndex);\n      const yPosition = (node) => getNodePosition(node);\n      const xExtent = () => Math.max(props.nodeThickness, 1);\n      const yExtent = (node) => Math.ceil(Math.max(props.sizeScale(node.value), 1));\n\n      const linkPadding = 1; // Default value for padding between nodes and links - cannot be changed\n\n      // Draw the nodes\n      const barGen = bar()\n        .x(xPosition)\n        .y(yPosition)\n        .width(xExtent)\n        .height(yExtent)\n        .fill(props.nodeColor);\n\n      const barGroup = selection.selectGroup(\"nodes\").datum(data.nodes);\n\n      barGroup.call(barGen);\n\n      const barTooltipAnchor = tooltipAnchor().position((node) => [\n        xPosition(node) + xExtent() / 2,\n        yPosition(node) + yExtent(node) / 2,\n      ]);\n\n      barGroup.call(barTooltipAnchor);\n\n      // Draw the column labels\n      const columnLabelX = (colIndex) => props.columnPosition(colIndex) + props.nodeThickness / 2;\n      const columnLabelY = -24;\n\n      const columnLabels = barGroup\n        .selectAll(\".sszvis-sankey-column-label\")\n        // One number for each column\n        .data(data.columnLengths)\n        .join(\"text\")\n        .attr(\"class\", \"sszvis-sankey-label sszvis-sankey-weak-label sszvis-sankey-column-label\");\n\n      columnLabels\n        .attr(\"transform\", (d, i) =>\n          translateString(columnLabelX(i) + props.columnLabelOffset(d, i), columnLabelY)\n        )\n        .text((d, i) => props.columnLabel(i));\n\n      const columnLabelTicks = barGroup\n        .selectAll(\".sszvis-sankey-column-label-tick\")\n        .data(data.columnLengths)\n        .join(\"line\")\n        .attr(\"class\", \"sszvis-sankey-column-label-tick\");\n\n      columnLabelTicks\n        .attr(\"x1\", (d, i) => halfPixel(columnLabelX(i)))\n        .attr(\"x2\", (d, i) => halfPixel(columnLabelX(i)))\n        .attr(\"y1\", halfPixel(columnLabelY + 8))\n        .attr(\"y2\", halfPixel(columnLabelY + 12));\n\n      // Draw the links\n      const linkPoints = (link) => {\n        const curveStart =\n            props.columnPosition(link.src.columnIndex) + props.nodeThickness + linkPadding,\n          curveEnd = props.columnPosition(link.tgt.columnIndex) - linkPadding,\n          startLevel =\n            getNodePosition(link.src) +\n            props.sizeScale(link.srcOffset) +\n            props.sizeScale(link.value) / 2,\n          endLevel =\n            getNodePosition(link.tgt) +\n            props.sizeScale(link.tgtOffset) +\n            props.sizeScale(link.value) / 2;\n\n        return [curveStart, curveEnd, startLevel, endLevel];\n      };\n\n      const linkPath = (link) => {\n        const points = linkPoints(link),\n          curveInterp = interpolateNumber(points[0], points[1]),\n          curveControlPtA = curveInterp(props.linkCurvature),\n          curveControlPtB = curveInterp(1 - props.linkCurvature);\n\n        return linkPathString(\n          points[0],\n          curveControlPtA,\n          curveControlPtB,\n          points[1],\n          points[2],\n          points[3]\n        );\n      };\n\n      const linkBoundingBox = (link) => {\n        const points = linkPoints(link);\n\n        return linkBounds(points[0], points[1], points[2], points[3]);\n      };\n\n      const linkThickness = (link) => Math.max(props.sizeScale(link.value), 1);\n\n      // Render the links\n      const linksGroup = selection.selectGroup(\"links\");\n\n      const linksElems = linksGroup\n        .selectAll(\".sszvis-link\")\n        .data(data.links, idAcc)\n        .join(\"path\")\n        .attr(\"class\", \"sszvis-link\");\n\n      linksElems\n        .attr(\"fill\", \"none\")\n        .attr(\"d\", linkPath)\n        .attr(\"stroke-width\", linkThickness)\n        .attr(\"stroke\", props.linkColor)\n        .sort(props.linkSort);\n\n      linksGroup.datum(data.links);\n\n      const linkTooltipAnchor = tooltipAnchor().position((link) => {\n        const bbox = linkBoundingBox(link);\n        return [(bbox[0] + bbox[1]) / 2, (bbox[2] + bbox[3]) / 2];\n      });\n\n      linksGroup.call(linkTooltipAnchor);\n\n      // Render the link labels\n      const linkLabelsGroup = selection.selectGroup(\"linklabels\");\n\n      // If no props.linkSourceLabels are provided, most of this rendering is no-op\n      const linkSourceLabels = linkLabelsGroup\n        .selectAll(\".sszvis-sankey-link-source-label\")\n        .data(props.linkSourceLabels)\n        .join(\"text\")\n        .attr(\n          \"class\",\n          \"sszvis-sankey-label sszvis-sankey-strong-label sszvis-sankey-link-source-label\"\n        );\n\n      linkSourceLabels\n        .attr(\"transform\", (link) => {\n          const bbox = linkBoundingBox(link);\n          return translateString(bbox[0] + 6, bbox[2]);\n        })\n        .text(props.linkLabel);\n\n      // If no props.linkTargetLabels are provided, most of this rendering is no-op\n      const linkTargetLabels = linkLabelsGroup\n        .selectAll(\".sszvis-sankey-link-target-label\")\n        .data(props.linkTargetLabels)\n        .join(\"text\")\n        .attr(\n          \"class\",\n          \"sszvis-sankey-label sszvis-sankey-strong-label sszvis-sankey-link-target-label\"\n        );\n\n      linkTargetLabels\n        .attr(\"transform\", (link) => {\n          const bbox = linkBoundingBox(link);\n          return translateString(bbox[1] - 6, bbox[3]);\n        })\n        .text(props.linkLabel);\n\n      // Render the node labels and their hit boxes\n      const getLabelSide = (colIndex) => {\n        let side = props.labelSide(colIndex);\n        if (props.labelSideSwitch) {\n          side = side === \"left\" ? \"right\" : \"left\";\n        }\n        return side;\n      };\n\n      const nodeLabelsGroup = selection.selectGroup(\"nodelabels\");\n\n      const barLabels = nodeLabelsGroup\n        .selectAll(\".sszvis-sankey-node-label\")\n        .data(data.nodes)\n        .join(\"text\")\n        .attr(\"class\", \"sszvis-sankey-label sszvis-sankey-weak-label sszvis-sankey-node-label\");\n\n      barLabels\n        .text((node) => props.nameLabel(node.id))\n        .attr(\"text-align\", \"middle\")\n        .attr(\"text-anchor\", (node) =>\n          getLabelSide(node.columnIndex) === \"left\" ? \"end\" : \"start\"\n        )\n        .attr(\"x\", (node) =>\n          getLabelSide(node.columnIndex) === \"left\"\n            ? xPosition(node) - 6\n            : xPosition(node) + props.nodeThickness + 6\n        )\n        .attr(\"y\", (node) => yPosition(node) + yExtent(node) / 2)\n        .style(\"opacity\", props.labelOpacity);\n\n      const barLabelHitBoxes = nodeLabelsGroup\n        .selectAll(\".sszvis-sankey-hitbox\")\n        .data(data.nodes)\n        .join(\"rect\")\n        .attr(\"class\", \"sszvis-sankey-hitbox\");\n\n      barLabelHitBoxes\n        .attr(\"fill\", \"transparent\")\n        .attr(\n          \"x\",\n          (node) =>\n            xPosition(node) +\n            (getLabelSide(node.columnIndex) === \"left\" ? -props.labelHitBoxSize : 0)\n        )\n        .attr(\"y\", (node) => yPosition(node) - props.nodePadding / 2)\n        .attr(\"width\", props.labelHitBoxSize + props.nodeThickness)\n        .attr(\"height\", (node) => yExtent(node) + props.nodePadding);\n    });\n}\n"],"names":["linkPathString","x0","x1","x2","x3","y0","y1","linkBounds","component","prop","fn","columnLabel","columnLabelOffset","linkCurvature","linkSort","a","b","value","labelSide","labelOpacity","labelHitBoxSize","nameLabel","linkSourceLabels","linkTargetLabels","render","data","selection","select","props","idAcc","getNodePosition","node","Math","floor","columnPadding","columnIndex","sizeScale","valueOffset","nodePadding","nodeIndex","xPosition","columnPosition","yPosition","xExtent","max","nodeThickness","yExtent","ceil","linkPadding","barGen","bar","x","y","width","height","fill","nodeColor","barGroup","selectGroup","datum","nodes","call","barTooltipAnchor","tooltipAnchor","position","columnLabelX","colIndex","columnLabelY","columnLabels","selectAll","columnLengths","join","attr","d","i","translateString","text","columnLabelTicks","halfPixel","linkPoints","link","curveStart","src","curveEnd","tgt","startLevel","srcOffset","endLevel","tgtOffset","linkPath","points","curveInterp","interpolateNumber","curveControlPtA","curveControlPtB","linkBoundingBox","linkThickness","linksGroup","linksElems","links","linkColor","sort","linkTooltipAnchor","bbox","linkLabelsGroup","linkLabel","getLabelSide","side","labelSideSwitch","nodeLabelsGroup","barLabels","id","style","barLabelHitBoxes"],"mappings":"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"}