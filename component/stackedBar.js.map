{"version":3,"file":"stackedBar.js","sources":["../../src/component/stackedBar.js"],"sourcesContent":["/**\n * Stacked Bar component\n *\n * This component includes both the vertical and horizontal stacked bar chart components.\n * Both are constiations on the same concept, and they both use the same abstract intermediate\n * representation for the stack, but are rendered using different dimensions. Note that using\n * this component will add the properties 'y0' and 'y' to any passed-in data objects, as part of\n * computing the stack intermediate representation. Existing properties with these names will be\n * overwritten.\n *\n * @module sszvis/component/stackedBar/horizontal\n * @module sszvis/component/stackedBar/vertical\n *\n * @property {function} xAccessor           Specifies an x-accessor for the stack layout. The result of this function\n *                                          is used to compute the horizontal extent of each element in the stack.\n *                                          The return value must be a number.\n * @property {function} xScale              Specifies an x-scale for the stack layout. This scale is used to position\n *                                          the elements of each stack, both the left offset value and the width of each stack segment.\n * @property {number, function} width       Specifies a width for the bars in the stack layout. This value is not used in the\n *                                          horizontal orientation. (xScale is used instead).\n * @property {function} yAccessor           The y-accessor. The return values of this function are used to group elements together as stacks.\n * @property {function} yScale              A y-scale. After the stack is computed, the y-scale is used to position each stack.\n * @property {number, function} height      Specify the height of each rectangle. This value determines the height of each element in the stacks.\n * @property {string, function} fill        Specify a fill value for the rectangles (default black).\n * @property {string, function} stroke      Specify a stroke value for the stack rectangles (default none).\n * @property {string} orientation           Specifies the orientation (\"vertical\" or \"horizontal\") of the stacked bar chart.\n *                                          Used internally to configure the verticalBar and the horizontalBar. Should probably never be changed.\n *\n * @return {sszvis.component}\n */\n\nimport { select, stack as d3Stack, stackOrderNone, stackOrderReverse, max } from \"d3\";\n\nimport * as fn from \"../fn.js\";\nimport { cascade } from \"../cascade.js\";\nimport bar from \"./bar.js\";\nimport { component } from \"../d3-component.js\";\n\nconst stackAcc = fn.prop(\"stack\");\n\n// Accessors for the first and second element of a tuple (2-element array).\nconst fst = fn.prop(\"0\");\nconst snd = fn.prop(\"1\");\n\nfunction stackedBarData(order) {\n  return function (_stackAcc, seriesAcc, valueAcc) {\n    return function (data) {\n      const rows = cascade().arrayBy(_stackAcc).objectBy(seriesAcc).apply(data);\n\n      // Collect all keys ()\n      const keys = rows.reduce((a, row) => fn.set([...a, ...Object.keys(row)]), []);\n\n      const stacks = d3Stack()\n        .keys(keys)\n        .value((x, key) => valueAcc(x[key][0]))\n        .order(order)(rows);\n\n      // Simplify the 'data' property.\n      for (const stack of stacks) {\n        for (const d of stack) {\n          d.series = stack.key;\n          d.data = d.data[stack.key][0];\n          d.stack = _stackAcc(d.data);\n        }\n      }\n\n      stacks.keys = keys;\n\n      stacks.maxValue = max(stacks, (stack) => max(stack, (d) => d[1]));\n\n      return stacks;\n    };\n  };\n}\n\nexport const stackedBarHorizontalData = stackedBarData(stackOrderNone);\nexport const stackedBarVerticalData = stackedBarData(stackOrderReverse);\n\nfunction stackedBar(config) {\n  return component()\n    .prop(\"xScale\", fn.functor)\n    .prop(\"width\", fn.functor)\n    .prop(\"yScale\", fn.functor)\n    .prop(\"height\", fn.functor)\n    .prop(\"fill\")\n    .prop(\"stroke\")\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const barGen = bar()\n        .x(config.x(props))\n        .y(config.y(props))\n        .width(config.width(props))\n        .height(config.height(props))\n        .fill(props.fill)\n        .stroke(props.stroke || \"#FFFFFF\");\n\n      const groups = selection\n        .selectAll(\".sszvis-stack\")\n        .data(data)\n        .join(\"g\")\n        .classed(\"sszvis-stack\", true);\n\n      groups.call(barGen);\n    });\n}\n\nconst horizontalStackedBarConfig = {\n  x(props) {\n    return fn.compose(props.xScale, fst);\n  },\n  y(props) {\n    return fn.compose(props.yScale, stackAcc);\n  },\n  width(props) {\n    return function (d) {\n      return props.xScale(d[1]) - props.xScale(d[0]);\n    };\n  },\n  height(props) {\n    return props.height;\n  },\n};\nexport const stackedBarHorizontal = function () {\n  return stackedBar(horizontalStackedBarConfig);\n};\n\nconst verticalStackedBarConfig = {\n  x(props) {\n    return fn.compose(props.xScale, stackAcc);\n  },\n  y(props) {\n    return fn.compose(props.yScale, snd);\n  },\n  width(props) {\n    return props.width;\n  },\n  height(props) {\n    return function (d) {\n      return props.yScale(d[0]) - props.yScale(d[1]);\n    };\n  },\n};\nexport const stackedBarVertical = function () {\n  return stackedBar(verticalStackedBarConfig);\n};\n"],"names":["stackAcc","fn","fst","snd","stackedBarData","order","_stackAcc","seriesAcc","valueAcc","data","rows","cascade","arrayBy","objectBy","apply","keys","reduce","a","row","Object","stacks","d3Stack","value","x","key","stack","d","series","maxValue","max","stackedBarHorizontalData","stackOrderNone","stackedBarVerticalData","stackOrderReverse","stackedBar","config","component","prop","render","selection","select","props","barGen","bar","y","width","height","fill","stroke","groups","selectAll","join","classed","call","horizontalStackedBarConfig","xScale","yScale","stackedBarHorizontal","verticalStackedBarConfig","stackedBarVertical"],"mappings":"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"}