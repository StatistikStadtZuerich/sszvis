{"version":3,"file":"pie.js","sources":["../../src/component/pie.js"],"sourcesContent":["/**\n * Pie component\n *\n * The pie component is used to draw pie charts. It uses the d3.arc() generator\n * to create pie wedges.\n *\n * THe input data should be an array of data values, where each data value represents one wedge in the pie.\n *\n * @module sszvis/component/pie\n *\n * @property {number} radius                  The radius of the pie chart (no default)\n * @property {string, function} fill          a fill color for wedges in the pie (default black). Ideally a function\n *                                            which takes a data value.\n * @property {string, function} stroke        the stroke color for wedges in the pie (default none)\n * @property {string, function} angle         specifys the angle of the wedges in radians. Theoretically this could be\n *                                            a constant, but that would make for a very strange pie. Ideally, this\n *                                            is a function which takes a data value and returns the angle in radians.\n *\n * @return {sszvis.component}\n */\n\nimport { arc, interpolate, select } from \"d3\";\nimport tooltipAnchor from \"../annotation/tooltipAnchor.js\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\nimport { defaultTransition } from \"../transition.js\";\n\nexport default function () {\n  return component()\n    .prop(\"radius\")\n    .prop(\"fill\")\n    .prop(\"stroke\")\n    .prop(\"angle\", fn.functor)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const stroke = props.stroke || \"#FFFFFF\";\n\n      let angle = 0;\n      for (const value of data) {\n        // In order for an angle transition to work correctly in d3, the transition must be done in data space.\n        // The computed arc path itself cannot be interpolated without error.\n        // see http://bl.ocks.org/mbostock/5100636 for a straightforward example.\n        // However, due to the structure of sszvis and the way d3 data joining works, this poses a bit of a challenge,\n        // since old and new data values could be on different objects, and they need to be merged.\n        // In the code that follows, value._a0 and value._a1 are the destination angles for the transition.\n        // value.a0 and value.a1 are the current values in the transition (either the initial value, some intermediate value, or the final angle value).\n        value._a0 = angle;\n        // These a0 and a1 values may be overwritten later if there is already data bound at this data index. (see the .each function further down).\n        if (value.a0 == undefined || isNaN(value.a0)) value.a0 = angle;\n        angle += props.angle(value);\n        value._a1 = angle;\n        // data values which don't already have angles set start out at the complete value.\n        if (value.a1 == undefined || isNaN(value.a1)) value.a1 = angle;\n      }\n\n      const arcGen = arc()\n        .innerRadius(4)\n        .outerRadius(props.radius)\n        .startAngle((d) => d.a0)\n        .endAngle((d) => d.a1);\n\n      const segments = selection\n        .selectAll(\".sszvis-path\")\n        .each((d, i) => {\n          // This matches the data values iteratively in the same way d3 will when it does the data join.\n          // This is kind of a hack, but it's the only way to get any existing angle values from the already-bound data\n          if (data[i]) {\n            data[i].a0 = d.a0;\n            data[i].a1 = d.a1;\n          }\n        })\n        .data(data)\n        .join(\"path\")\n        .classed(\"sszvis-path\", true)\n        .attr(\"transform\", \"translate(\" + props.radius + \",\" + props.radius + \")\")\n        .attr(\"fill\", props.fill)\n        .attr(\"stroke\", stroke);\n\n      segments\n        .transition(defaultTransition())\n        .attr(\"transform\", \"translate(\" + props.radius + \",\" + props.radius + \")\")\n        .attrTween(\"d\", (d) => {\n          const angle0Interp = interpolate(d.a0, d._a0);\n          const angle1Interp = interpolate(d.a1, d._a1);\n          return function (t) {\n            d.a0 = angle0Interp(t);\n            d.a1 = angle1Interp(t);\n            return arcGen(d);\n          };\n        })\n        .attr(\"fill\", props.fill)\n        .attr(\"stroke\", stroke);\n\n      const ta = tooltipAnchor().position((d) => {\n        // The correction by - Math.PI / 2 is necessary because d3 automatically (and with brief, buried documentation!)\n        // makes the same correction to svg.arc() angles :o\n        const a = d.a0 + Math.abs(d.a1 - d.a0) / 2 - Math.PI / 2;\n        const r = (props.radius * 2) / 3;\n        return [props.radius + Math.cos(a) * r, props.radius + Math.sin(a) * r];\n      });\n\n      selection.datum(data).call(ta);\n    });\n}\n"],"names":["component","prop","fn","render","data","selection","select","props","stroke","angle","value","_a0","a0","undefined","isNaN","_a1","a1","arcGen","arc","innerRadius","outerRadius","radius","startAngle","d","endAngle","segments","selectAll","each","i","join","classed","attr","fill","transition","defaultTransition","attrTween","angle0Interp","interpolate","angle1Interp","t","ta","tooltipAnchor","position","a","Math","abs","PI","r","cos","sin","datum","call"],"mappings":"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"}