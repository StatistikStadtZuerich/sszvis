{"version":3,"file":"stackedPyramid.js","sources":["../../src/component/stackedPyramid.js"],"sourcesContent":["/**\n * Stacked Pyramid component\n *\n * The pyramid component is primarily used to show a distribution of age groups\n * in a population (population pyramid). The chart is mirrored vertically,\n * meaning that it has a horizontal axis that extends in a positive and negative\n * direction having the same domain.\n *\n * This chart's horizontal point of origin is at it's spine, i.e. the center of\n * the chart.\n *\n * @module sszvis/component/stackedPyramid\n *\n * @requires sszvis.component.bar\n *\n * @property {number, d3.scale} [barFill]          The color of a bar\n * @property {number, d3.scale} barHeight          The height of a bar\n * @property {number, d3.scale} barWidth           The width of a bar\n * @property {number, d3.scale} barPosition        The vertical position of a bar\n * @property {Array<number, number>} tooltipAnchor The anchor position for the tooltips. Uses sszvis.component.bar.tooltipAnchor\n *                                                 under the hood to optionally reposition the tooltip anchors in the pyramid chart.\n *                                                 Default value is [0.5, 0.5], which centers tooltips on the bars\n * @property {function}         leftAccessor       Data for the left side\n * @property {function}         rightAccessor      Data for the right side\n * @property {function}         [leftRefAccessor]  Reference data for the left side\n * @property {function}         [rightRefAccessor] Reference data for the right side\n *\n * @return {sszvis.component}\n */\n\nimport { line as d3Line, stack as d3Stack, max, select } from \"d3\";\nimport { cascade } from \"../cascade.js\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\nimport { defaultTransition } from \"../transition.js\";\nimport bar from \"./bar.js\";\n\n/* Constants\n----------------------------------------------- */\nconst SPINE_PADDING = 0.5;\n\nconst dataAcc = fn.prop(\"data\");\nconst rowAcc = fn.prop(\"row\");\n\n/**\n * This function prepares the data for the stackedPyramid component\n *\n * The input data is expected to have at least four columns:\n *\n *  - side: determines on which side (left/right) the value goes. MUST have cardinality of two!\n *  - row: determines on which row (vertical position) the value goes.\n *  - series: determines in which series (for the stack) the value is.\n *  - value: the numerical value.\n *\n * The combination of each distinct (side,row,series) triplet MUST appear only once\n * in the data. This function makes no effort to normalize the data if that's not the case.\n */\nexport function stackedPyramidData(sideAcc, _rowAcc, seriesAcc, valueAcc) {\n  return function (data) {\n    const sides = cascade()\n      .arrayBy(sideAcc)\n      .arrayBy(_rowAcc)\n      .objectBy(seriesAcc)\n      .apply(data)\n      .map((rows) => {\n        const keys = Object.keys(rows[0]);\n        const side = sideAcc(rows[0][keys[0]][0]);\n\n        const stacks = d3Stack()\n          .keys(keys)\n          .value((x, key) => valueAcc(x[key][0]))(rows);\n\n        for (const [i, stack] of stacks.entries()) {\n          for (const [row, d] of stack.entries()) {\n            d.data = d.data[keys[i]][0];\n            d.series = keys[i];\n            d.side = side;\n            d.row = row;\n            d.value = valueAcc(d.data);\n          }\n        }\n\n        return stacks;\n      });\n\n    // Compute the max value, for convenience. This value is needed to construct\n    // the horizontal scale.\n    sides.maxValue = max(sides, (side) => max(side, (rows) => max(rows, (row) => row[1])));\n\n    return sides;\n  };\n}\n\n/* Module\n----------------------------------------------- */\nexport function stackedPyramid() {\n  return component()\n    .prop(\"barHeight\", fn.functor)\n    .prop(\"barWidth\", fn.functor)\n    .prop(\"barPosition\", fn.functor)\n    .prop(\"barFill\", fn.functor)\n    .barFill(\"#000\")\n    .prop(\"tooltipAnchor\")\n    .tooltipAnchor([0.5, 0.5])\n    .prop(\"leftAccessor\")\n    .prop(\"rightAccessor\")\n    .prop(\"leftRefAccessor\")\n    .prop(\"rightRefAccessor\")\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      // Components\n\n      const leftBar = bar()\n        .x((d) => -SPINE_PADDING - props.barWidth(d[1]))\n        .y(fn.compose(props.barPosition, rowAcc))\n        .height(props.barHeight)\n        .width((d) => props.barWidth(d[1]) - props.barWidth(d[0]))\n        .fill(fn.compose(props.barFill, dataAcc))\n        .tooltipAnchor(props.tooltipAnchor);\n\n      const rightBar = bar()\n        .x((d) => SPINE_PADDING + props.barWidth(d[0]))\n        .y(fn.compose(props.barPosition, rowAcc))\n        .height(props.barHeight)\n        .width((d) => props.barWidth(d[1]) - props.barWidth(d[0]))\n        .fill(fn.compose(props.barFill, dataAcc))\n        .tooltipAnchor(props.tooltipAnchor);\n\n      const leftStack = stackComponent().stackElement(leftBar);\n\n      const rightStack = stackComponent().stackElement(rightBar);\n\n      const leftLine = lineComponent()\n        .barPosition(props.barPosition)\n        .barWidth(props.barWidth)\n        .mirror(true);\n\n      const rightLine = lineComponent().barPosition(props.barPosition).barWidth(props.barWidth);\n\n      // Rendering\n\n      selection.selectGroup(\"leftStack\").datum(props.leftAccessor(data)).call(leftStack);\n\n      selection.selectGroup(\"rightStack\").datum(props.rightAccessor(data)).call(rightStack);\n\n      selection\n        .selectGroup(\"leftReference\")\n        .datum(props.leftRefAccessor ? [props.leftRefAccessor(data)] : [])\n        .call(leftLine);\n\n      selection\n        .selectGroup(\"rightReference\")\n        .datum(props.rightRefAccessor ? [props.rightRefAccessor(data)] : [])\n        .call(rightLine);\n    });\n}\n\nfunction stackComponent() {\n  return component()\n    .prop(\"stackElement\")\n    .renderSelection((selection) => {\n      const datum = selection.datum();\n      const props = selection.props();\n\n      const stack = selection\n        .selectAll(\"[data-sszvis-stack]\")\n        .data(datum)\n        .join(\"g\")\n        .attr(\"data-sszvis-stack\", \"\");\n\n      stack.each(function (d) {\n        select(this).datum(d).call(props.stackElement);\n      });\n    });\n}\n\nfunction lineComponent() {\n  return component()\n    .prop(\"barPosition\")\n    .prop(\"barWidth\")\n    .prop(\"mirror\")\n    .mirror(false)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const lineGen = d3Line().x(props.barWidth).y(props.barPosition);\n\n      const line = selection\n        .selectAll(\".sszvis-path\")\n        .data(data)\n        .join(\"path\")\n        .attr(\"class\", \"sszvis-path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#aaa\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", \"3 3\");\n\n      line\n        .attr(\"transform\", props.mirror ? \"scale(-1, 1)\" : \"\")\n        .transition(defaultTransition())\n        .attr(\"d\", lineGen);\n    });\n}\n"],"names":["SPINE_PADDING","dataAcc","fn","rowAcc","stackedPyramidData","sideAcc","_rowAcc","seriesAcc","valueAcc","data","sides","cascade","arrayBy","objectBy","apply","map","rows","keys","Object","side","stacks","d3Stack","value","x","key","i","stack","entries","row","d","series","maxValue","max","stackedPyramid","component","prop","barFill","tooltipAnchor","render","selection","select","props","leftBar","bar","barWidth","y","barPosition","height","barHeight","width","fill","rightBar","leftStack","stackComponent","stackElement","rightStack","leftLine","lineComponent","mirror","rightLine","selectGroup","datum","leftAccessor","call","rightAccessor","leftRefAccessor","rightRefAccessor","renderSelection","selectAll","join","attr","each","lineGen","d3Line","line","transition","defaultTransition"],"mappings":"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"}