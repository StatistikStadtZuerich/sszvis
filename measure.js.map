{"version":3,"file":"measure.js","sources":["../src/measure.js"],"sourcesContent":["/**\n * A collection of utilities to measure elements\n *\n * @module sszvis/measure\n */\nimport { select } from \"d3\";\nimport { isSelection, isString } from \"./fn\";\n\n/**\n * measureDimensions\n *\n * Calculates the width of the first DOM element defined by a CSS selector string,\n * a DOM element reference, or a d3 selection. If the DOM element can't be\n * measured `undefined` is returned for the width. Returns also measurements of\n * the screen, which are used by some responsive components.\n *\n * @param  {string|DOMElement|d3.selection} el The element to measure\n *\n * @return {Object} The measurement of the width of the element, plus dimensions of the screen\n *                  The returned object contains:\n *                      width: {number|undefined} The width of the element\n *                      screenWidth: {number} The innerWidth of the screen\n *                      screenHeight: {number} The innerHeight of the screen\n */\nexport const measureDimensions = (arg) => {\n  let node;\n  if (isString(arg)) {\n    node = select(arg).node();\n  } else if (isSelection(arg)) {\n    node = arg.node();\n  } else {\n    node = arg;\n  }\n  return {\n    width: node ? node.getBoundingClientRect().width : undefined,\n    screenWidth: window.innerWidth,\n    screenHeight: window.innerHeight,\n  };\n};\n\n/**\n * measureText\n *\n * Calculates the width of a string given a font size and a font face. It might\n * be more convenient to use a preset based on this function that has the font\n * size and family already set.\n *\n * @param {number} fontSize The font size in pixels\n * @param {string} fontFace The font face (\"Arial\", \"Helvetica\", etc.)\n * @param {string} text The text to measure\n * @returns {number} The width of the text\n *\n * @example\n * const helloWidth = sszvis.measureText(14, \"Arial, sans-serif\")(\"Hello!\")\n **/\nexport const measureText = (() => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const cache = {};\n\n  return (fontSize, fontFace, text) => {\n    const key = [fontSize, fontFace, text].join(\"-\");\n    context.font = fontSize + \"px \" + fontFace;\n    return cache[key] || (cache[key] = context.measureText(text).width);\n  };\n})();\n\n/**\n * measureAxisLabel\n *\n * A preset to measure the widths of axis labels.\n *\n * @param {string} text The text to measure\n * @returns {number} The width of the text\n *\n * @example\n * const labelWidth = sszvis.measureAxisLabel(\"Hello!\")\n */\nexport const measureAxisLabel = (text) => measureText(10, \"Arial, sans-serif\", text);\n\n/**\n * measureLegendLabel\n *\n * A preset to measure the widths of legend labels.\n *\n * @param {string} text The text to measure\n * @returns {number} The width of the text\n *\n * @example\n * const labelWidth = sszvis.measureLegendLabel(\"Hello!\")\n */\nexport const measureLegendLabel = (text) => measureText(12, \"Arial, sans-serif\", text);\n"],"names":["measureDimensions","arg","node","isString","select","isSelection","width","getBoundingClientRect","undefined","screenWidth","window","innerWidth","screenHeight","innerHeight","measureText","canvas","document","createElement","context","getContext","cache","fontSize","fontFace","text","key","join","font","measureAxisLabel","measureLegendLabel"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,iBAAiB,GAAIC,GAAG,IAAK;AACxC,EAAA,IAAIC,IAAI;AACR,EAAA,IAAIC,QAAQ,CAACF,GAAG,CAAC,EAAE;IACjBC,IAAI,GAAGE,MAAM,CAACH,GAAG,CAAC,CAACC,IAAI,EAAE;AAC3B,EAAA,CAAC,MAAM,IAAIG,WAAW,CAACJ,GAAG,CAAC,EAAE;AAC3BC,IAAAA,IAAI,GAAGD,GAAG,CAACC,IAAI,EAAE;AACnB,EAAA,CAAC,MAAM;AACLA,IAAAA,IAAI,GAAGD,GAAG;AACZ,EAAA;EACA,OAAO;IACLK,KAAK,EAAEJ,IAAI,GAAGA,IAAI,CAACK,qBAAqB,EAAE,CAACD,KAAK,GAAGE,SAAS;IAC5DC,WAAW,EAAEC,MAAM,CAACC,UAAU;IAC9BC,YAAY,EAAEF,MAAM,CAACG;GACtB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,WAAW,GAAG,CAAC,MAAM;AAChC,EAAA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAC/C,EAAA,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACvC,MAAMC,KAAK,GAAG,EAAE;AAEhB,EAAA,OAAO,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,KAAK;AACnC,IAAA,MAAMC,GAAG,GAAG,CAACH,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;AAChDP,IAAAA,OAAO,CAACQ,IAAI,GAAGL,QAAQ,GAAG,KAAK,GAAGC,QAAQ;AAC1C,IAAA,OAAOF,KAAK,CAACI,GAAG,CAAC,KAAKJ,KAAK,CAACI,GAAG,CAAC,GAAGN,OAAO,CAACJ,WAAW,CAACS,IAAI,CAAC,CAACjB,KAAK,CAAC;EACrE,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMqB,gBAAgB,GAAIJ,IAAI,IAAKT,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAES,IAAI;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMK,kBAAkB,GAAIL,IAAI,IAAKT,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAES,IAAI;;;;"}