{"version":3,"file":"crisp.js","sources":["../../src/svgUtils/crisp.js"],"sourcesContent":["/**\n * Crisp\n *\n * Utilities to render SVG elements crisply by placing them precisely on the\n * pixel grid. Rectangles should be placed on round pixels, lines and circles\n * on half-pixels.\n *\n * Example of rectangle placement (four • create one pixel)\n * •    •----•----•    •\n *      |         |\n * •    •----•----•    •\n *\n * Example of line placement (four • create one pixel)\n * •    •    •    •    •\n *    ---------------\n * •    •    •    •    •\n *\n * @module sszvis/svgUtils/crisp\n */\n\nimport * as fn from \"../fn.js\";\n\n/**\n * crisp.halfPixel\n *\n * To ensure SVG elements are rendered crisply and without anti-aliasing\n * artefacts, they must be placed on a half-pixel grid.\n *\n * @param  {number} pos A pixel position\n * @return {number}     A pixel position snapped to the pixel grid\n */\nexport const halfPixel = function (pos) {\n  return Math.floor(pos) + 0.5;\n};\n\n/**\n * crisp.roundTransformString\n *\n * Takes an SVG transform string 'translate(12.3,4.56789) rotate(3.5)' and\n * rounds all translate coordinates to integers: 'translate(12,5) rotate(3.5)'.\n *\n * A valid translate instruction has the form 'translate(<x> [<y>])' where\n * x and y can be separated by a space or comma. We normalize this to use\n * spaces because that's what Internet Explorer uses.\n *\n * @param  {string} transformStr A valid SVG transform string\n * @return {string}              An SVG transform string with rounded values\n */\nexport const roundTransformString = function (transformStr) {\n  const roundNumber = fn.compose(Math.floor, Number);\n  return transformStr.replace(/(translate\\()\\s*([\\d ,.]+)\\s*(\\))/i, (_, left, vecStr, right) => {\n    const roundVec = vecStr\n      .replace(\",\", \" \")\n      .replace(/\\s+/, \" \")\n      .split(\" \")\n      .map(roundNumber)\n      .join(\",\");\n    return left + roundVec + right;\n  });\n};\n\n/**\n * crisp.transformTranslateSubpixelShift\n *\n * This helper function takes a transform string and returns a vector that\n * tells us how much to shift an element in order to place it on a half-pixel\n * grid.\n *\n * @param  {string} transformStr A valid SVG transform string\n * @return {vecor}               Two-element array ([dx, dy])\n */\nexport const transformTranslateSubpixelShift = function (transformStr) {\n  const roundNumber = fn.compose(Math.floor, Number);\n  const m = transformStr.match(/(translate\\()\\s*([\\d ,.-]+)\\s*(\\))/i);\n  const vec = m[2].replace(\",\", \" \").replace(/\\s+/, \" \").split(\" \").map(Number);\n\n  if (vec.length === 1) vec.push([0]);\n\n  const vecRound = vec.map(roundNumber);\n  return [vec[0] - vecRound[0], vec[1] - vecRound[1]];\n};\n"],"names":["halfPixel","pos","Math","floor","roundTransformString","transformStr","roundNumber","fn","Number","replace","_","left","vecStr","right","roundVec","split","map","join","transformTranslateSubpixelShift","m","match","vec","length","push","vecRound"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaA,SAAS,GAAG,UAAUC,GAAG,EAAE;AACtC,EAAA,OAAOC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,GAAG,GAAG;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaG,oBAAoB,GAAG,UAAUC,YAAY,EAAE;EAC1D,MAAMC,WAAW,GAAGC,OAAU,CAACL,IAAI,CAACC,KAAK,EAAEK,MAAM,CAAC;AAClD,EAAA,OAAOH,YAAY,CAACI,OAAO,CAAC,oCAAoC,EAAE,CAACC,CAAC,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,KAAK;AAC5F,IAAA,MAAMC,QAAQ,GAAGF,MAAM,CACpBH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CACjBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBM,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACV,WAAW,CAAC,CAChBW,IAAI,CAAC,GAAG,CAAC;AACZ,IAAA,OAAON,IAAI,GAAGG,QAAQ,GAAGD,KAAK;AAChC,EAAA,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaK,+BAA+B,GAAG,UAAUb,YAAY,EAAE;EACrE,MAAMC,WAAW,GAAGC,OAAU,CAACL,IAAI,CAACC,KAAK,EAAEK,MAAM,CAAC;AAClD,EAAA,MAAMW,CAAC,GAAGd,YAAY,CAACe,KAAK,CAAC,qCAAqC,CAAC;AACnE,EAAA,MAAMC,GAAG,GAAGF,CAAC,CAAC,CAAC,CAAC,CAACV,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACR,MAAM,CAAC;AAE7E,EAAA,IAAIa,GAAG,CAACC,MAAM,KAAK,CAAC,EAAED,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAEnC,EAAA,MAAMC,QAAQ,GAAGH,GAAG,CAACL,GAAG,CAACV,WAAW,CAAC;EACrC,OAAO,CAACe,GAAG,CAAC,CAAC,CAAC,GAAGG,QAAQ,CAAC,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,GAAGG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrD;;;;"}