{"version":3,"file":"modularText.js","sources":["../../src/svgUtils/modularText.js"],"sourcesContent":["/**\n * ModularText component\n *\n * Create structured text with formatting and newlines. Use either the HTML or\n * SVG variant, depending on the output you expect.\n *\n * @module sszvis/svgUtils/modularText/html\n * @module sszvis/svgUtils/modularText/svg\n *\n * @example HTML\n * var fmtHtml = sszvis.svgUtils.modularText.html()\n *   .plain('Artist:')\n *   .plain(function(d) { return d.name; })\n *   .newline()\n *   .bold(function(d) { return d.age; })\n *   .italic('years old');\n * fmtHtml({name: 'Patti', age: 67});\n * //=> \"Artist: Patti<br/><strong>67</strong> <em>years old</em>\"\n *\n * @example SVG\n * var fmtSvg = sszvis.svgUtils.modularText.svg()\n *   .bold(function(d) { return d.items; })\n *   .plain('items');\n * fmtSvg({items: 30});\n * //=> \"<tspan x=\"0\" dy=\"0\"><tspan style=\"font-weight:bold\">30</tspan> <tspan>items</tspan></tspan>\"\n *\n * @property {string, function} plain  String without formatting\n * @property {string, function} italic String with italic style\n * @property {string, function} bold   String with bold style\n * @property newline                   Insert a line break\n *\n * @return {function} Formatting function that accepts a datum\n */\n\nimport * as fn from \"../fn.js\";\n\nfunction formatHTML() {\n  const styles = {\n    plain(d) {\n      return d;\n    },\n    italic(d) {\n      return \"<em>\" + d + \"</em>\";\n    },\n    bold(d) {\n      return \"<strong>\" + d + \"</strong>\";\n    },\n  };\n\n  return function (textBody, datum) {\n    return textBody\n      .lines()\n      .map((line) => line.map((word) => styles[word.style].call(null, word.text(datum))).join(\" \"))\n      .join(\"<br/>\");\n  };\n}\n\nfunction formatSVG() {\n  const styles = {\n    plain(d) {\n      return \"<tspan>\" + d + \"</tspan>\";\n    },\n    italic(d) {\n      return '<tspan style=\"font-style:italic\">' + d + \"</tspan>\";\n    },\n    bold(d) {\n      return '<tspan style=\"font-weight:bold\">' + d + \"</tspan>\";\n    },\n  };\n\n  return function (textBody, datum) {\n    return textBody.lines().reduce((svg, line, i) => {\n      const lineSvg = line.map((word) => styles[word.style].call(null, word.text(datum))).join(\" \");\n      const dy = i === 0 ? 0 : \"1.2em\";\n      return svg + '<tspan x=\"0\" dy=\"' + dy + '\">' + lineSvg + \"</tspan>\";\n    }, \"\");\n  };\n}\n\nfunction structuredText() {\n  const lines = [[]];\n\n  return {\n    addLine() {\n      lines.push([]);\n    },\n\n    addWord(style, text) {\n      fn.last(lines).push({\n        text: fn.functor(text),\n        style,\n      });\n    },\n\n    lines() {\n      return lines;\n    },\n  };\n}\n\nfunction makeTextWithFormat(format) {\n  return function () {\n    const textBody = structuredText();\n\n    function makeText(d) {\n      return format(textBody, d);\n    }\n\n    makeText.newline = function () {\n      textBody.addLine();\n      return makeText;\n    };\n\n    for (const style of [\"bold\", \"italic\", \"plain\"]) {\n      makeText[style] = function (text) {\n        textBody.addWord(style, text);\n        return makeText;\n      };\n    }\n\n    return makeText;\n  };\n}\n\nexport const modularTextHTML = makeTextWithFormat(formatHTML());\nexport const modularTextSVG = makeTextWithFormat(formatSVG());\n"],"names":["formatHTML","styles","plain","d","italic","bold","textBody","datum","lines","map","line","word","style","call","text","join","formatSVG","reduce","svg","i","lineSvg","dy","structuredText","addLine","push","addWord","fn","makeTextWithFormat","format","makeText","newline","modularTextHTML","modularTextSVG"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASA,UAAUA,GAAG;AACpB,EAAA,MAAMC,MAAM,GAAG;IACbC,KAAKA,CAACC,CAAC,EAAE;AACP,MAAA,OAAOA,CAAC;KACT;IACDC,MAAMA,CAACD,CAAC,EAAE;AACR,MAAA,OAAO,MAAM,GAAGA,CAAC,GAAG,OAAO;KAC5B;IACDE,IAAIA,CAACF,CAAC,EAAE;AACN,MAAA,OAAO,UAAU,GAAGA,CAAC,GAAG,WAAW;AACrC;GACD;AAED,EAAA,OAAO,UAAUG,QAAQ,EAAEC,KAAK,EAAE;IAChC,OAAOD,QAAQ,CACZE,KAAK,EAAE,CACPC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACD,GAAG,CAAEE,IAAI,IAAKV,MAAM,CAACU,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEF,IAAI,CAACG,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC,CAAC,CAC5FA,IAAI,CAAC,OAAO,CAAC;GACjB;AACH;AAEA,SAASC,SAASA,GAAG;AACnB,EAAA,MAAMf,MAAM,GAAG;IACbC,KAAKA,CAACC,CAAC,EAAE;AACP,MAAA,OAAO,SAAS,GAAGA,CAAC,GAAG,UAAU;KAClC;IACDC,MAAMA,CAACD,CAAC,EAAE;AACR,MAAA,OAAO,mCAAmC,GAAGA,CAAC,GAAG,UAAU;KAC5D;IACDE,IAAIA,CAACF,CAAC,EAAE;AACN,MAAA,OAAO,kCAAkC,GAAGA,CAAC,GAAG,UAAU;AAC5D;GACD;AAED,EAAA,OAAO,UAAUG,QAAQ,EAAEC,KAAK,EAAE;AAChC,IAAA,OAAOD,QAAQ,CAACE,KAAK,EAAE,CAACS,MAAM,CAAC,CAACC,GAAG,EAAER,IAAI,EAAES,CAAC,KAAK;AAC/C,MAAA,MAAMC,OAAO,GAAGV,IAAI,CAACD,GAAG,CAAEE,IAAI,IAAKV,MAAM,CAACU,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEF,IAAI,CAACG,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC;MAC7F,MAAMM,EAAE,GAAGF,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO;MAChC,OAAOD,GAAG,GAAG,mBAAmB,GAAGG,EAAE,GAAG,IAAI,GAAGD,OAAO,GAAG,UAAU;KACpE,EAAE,EAAE,CAAC;GACP;AACH;AAEA,SAASE,cAAcA,GAAG;AACxB,EAAA,MAAMd,KAAK,GAAG,CAAC,EAAE,CAAC;EAElB,OAAO;AACLe,IAAAA,OAAOA,GAAG;AACRf,MAAAA,KAAK,CAACgB,IAAI,CAAC,EAAE,CAAC;KACf;AAEDC,IAAAA,OAAOA,CAACb,KAAK,EAAEE,IAAI,EAAE;AACnBY,MAAAA,IAAO,CAAClB,KAAK,CAAC,CAACgB,IAAI,CAAC;AAClBV,QAAAA,IAAI,EAAEY,OAAU,CAACZ,IAAI,CAAC;AACtBF,QAAAA;AACF,OAAC,CAAC;KACH;AAEDJ,IAAAA,KAAKA,GAAG;AACN,MAAA,OAAOA,KAAK;AACd;GACD;AACH;AAEA,SAASmB,kBAAkBA,CAACC,MAAM,EAAE;AAClC,EAAA,OAAO,YAAY;AACjB,IAAA,MAAMtB,QAAQ,GAAGgB,cAAc,EAAE;IAEjC,SAASO,QAAQA,CAAC1B,CAAC,EAAE;AACnB,MAAA,OAAOyB,MAAM,CAACtB,QAAQ,EAAEH,CAAC,CAAC;AAC5B;IAEA0B,QAAQ,CAACC,OAAO,GAAG,YAAY;MAC7BxB,QAAQ,CAACiB,OAAO,EAAE;AAClB,MAAA,OAAOM,QAAQ;KAChB;IAED,KAAK,MAAMjB,KAAK,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE;AAC/CiB,MAAAA,QAAQ,CAACjB,KAAK,CAAC,GAAG,UAAUE,IAAI,EAAE;AAChCR,QAAAA,QAAQ,CAACmB,OAAO,CAACb,KAAK,EAAEE,IAAI,CAAC;AAC7B,QAAA,OAAOe,QAAQ;OAChB;AACH;AAEA,IAAA,OAAOA,QAAQ;GAChB;AACH;AAEO,MAAME,eAAe,GAAGJ,kBAAkB,CAAC3B,UAAU,EAAE;AACvD,MAAMgC,cAAc,GAAGL,kBAAkB,CAACX,SAAS,EAAE;;;;"}