{"version":3,"file":"ruler.js","sources":["../../src/annotation/ruler.js"],"sourcesContent":["/**\n * Ruler annotation\n *\n * The ruler component can be used to create a vertical line which highlights data at a certain\n * x-value, for instance in a line chart or area chart. The ruler expects data to be bound to\n * the layer it renders into, and it will generate a small dot for each data point it finds.\n *\n * @module sszvis/annotation/ruler\n *\n * @property {number} top                 A number which is the y-position of the top of the ruler line\n * @property {number} bottom              A number which is the y-position of the bottom of the ruler line\n * @property {function} x                 A number or function returning a number for the x-position of the ruler line.\n * @property {function} y                 A function for determining the y-position of the ruler dots. Should take a data\n *                                        value as an argument and return a y-position.\n * @property {function} label             A function for determining the labels of the ruler dots. Should take a\n *                                        data value as argument and return a label.\n * @property {string, function} color     A string or function to specify the color of the ruler dots.\n * @property {function} flip              A boolean or function which returns a boolean that specifies\n *                                        whether the labels on the ruler dots should be flipped. (they default to the right side)\n * @property {function} labelId           An id accessor function for the labels. This is used to match label data to svg elements,\n *                                        and it is used by the reduceOverlap algorithm to match calculated bounds and positions with\n *                                        labels. The default implementation uses the x and y positions of each label, but when labels\n *                                        overlap, these positions are the same (and one will be removed!). It's generally a good idea\n *                                        to provide your own function here, but you should especially use this when multiple labels\n *                                        could overlap with each other. Usually this will be some kind of category accessor function.\n * @property {boolean} reduceOverlap      Use an iterative relaxation algorithm to adjust the positions of the labels (when there is more\n *                                        than one label) so that they don't overlap. This can be computationally expensive, when there are\n *                                        many labels that need adjusting. This is turned off by default.\n *\n * @return {sszvis.component}\n */\n\nimport { ascending, select } from \"d3\";\nimport { component } from \"../d3-component.js\";\nimport * as fn from \"../fn.js\";\nimport { halfPixel } from \"../svgUtils/crisp.js\";\nimport translateString from \"../svgUtils/translateString.js\";\n\nexport const annotationRuler = () =>\n  component()\n    .prop(\"top\")\n    .prop(\"bottom\")\n    .prop(\"x\", fn.functor)\n    .prop(\"y\", fn.functor)\n    .prop(\"label\")\n    .label(fn.functor(\"\"))\n    .prop(\"color\")\n    .prop(\"flip\", fn.functor)\n    .flip(false)\n    .prop(\"labelId\", fn.functor)\n    .prop(\"reduceOverlap\")\n    .reduceOverlap(true)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      const labelId = props.labelId || ((d) => props.x(d) + \"_\" + props.y(d));\n\n      const ruler = selection\n        .selectAll(\".sszvis-ruler__rule\")\n        .data(data, labelId)\n        .join(\"line\")\n        .classed(\"sszvis-ruler__rule\", true);\n\n      ruler\n        .attr(\"x1\", fn.compose(halfPixel, props.x))\n        .attr(\"y1\", props.y)\n        .attr(\"x2\", fn.compose(halfPixel, props.x))\n        .attr(\"y2\", props.bottom);\n\n      const dot = selection\n        .selectAll(\".sszvis-ruler__dot\")\n        .data(data, labelId)\n        .join(\"circle\")\n        .classed(\"sszvis-ruler__dot\", true);\n\n      dot\n        .attr(\"cx\", fn.compose(halfPixel, props.x))\n        .attr(\"cy\", fn.compose(halfPixel, props.y))\n        .attr(\"r\", 3.5)\n        .attr(\"fill\", props.color);\n\n      selection\n        .selectAll(\".sszvis-ruler__label-outline\")\n        .data(data, labelId)\n        .join(\"text\")\n        .classed(\"sszvis-ruler__label-outline\", true);\n\n      const label = selection\n        .selectAll(\".sszvis-ruler__label\")\n        .data(data, labelId)\n        .join(\"text\")\n        .classed(\"sszvis-ruler__label\", true);\n\n      // Update both label and labelOutline selections\n\n      const crispX = fn.compose(halfPixel, props.x);\n      const crispY = fn.compose(halfPixel, props.y);\n\n      const textSelection = selection\n        .selectAll(\".sszvis-ruler__label, .sszvis-ruler__label-outline\")\n        .attr(\"transform\", (d) => {\n          const x = crispX(d);\n          const y = crispY(d);\n\n          const dx = props.flip(d) ? -10 : 10;\n          const dy = y < props.top ? 2 * y : y > props.bottom ? 0 : 5;\n\n          return translateString(x + dx, y + dy);\n        })\n        .style(\"text-anchor\", (d) => (props.flip(d) ? \"end\" : \"start\"))\n        .html(props.label);\n\n      if (props.reduceOverlap) {\n        const THRESHOLD = 2;\n        let ITERATIONS = 10;\n        const labelBounds = [];\n        // Optimization for the lookup later\n        const labelBoundsIndex = {};\n\n        // Reset vertical shift (set by previous renders)\n        textSelection.attr(\"y\", \"\");\n\n        // Create bounds objects\n        label.each(function (d) {\n          const bounds = this.getBoundingClientRect();\n          const item = {\n            top: bounds.top,\n            bottom: bounds.bottom,\n            dy: 0,\n          };\n          labelBounds.push(item);\n          labelBoundsIndex[labelId(d)] = item;\n        });\n\n        // Sort array in place by vertical position\n        // (only supports labels of same height)\n        labelBounds.sort((a, b) => ascending(a.top, b.top));\n\n        // Using postfix decrement means the expression evaluates to the value of the variable\n        // before the decrement takes place. In the case of 10 iterations, this means that the\n        // variable gets to 0 after the truthiness of the 10th iteration is tested, and the\n        // expression is false at the beginning of the 11th, so 10 iterations are executed.\n        // If you use prefix decrement (--ITERATIONS), the variable gets to 0 at the beginning of\n        // the 10th iteration, meaning that only 9 iterations are executed.\n        while (ITERATIONS--) {\n          // Calculate overlap and correct position\n          for (const [index, firstLabel] of labelBounds.entries()) {\n            for (const secondLabel of labelBounds.slice(index + 1)) {\n              const overlap = firstLabel.bottom - secondLabel.top;\n              if (overlap >= THRESHOLD) {\n                const offset = overlap / 2;\n                firstLabel.bottom -= offset;\n                firstLabel.top -= offset;\n                firstLabel.dy -= offset;\n                secondLabel.bottom += offset;\n                secondLabel.top += offset;\n                secondLabel.dy += offset;\n              }\n            }\n          }\n        }\n\n        // Shift vertically to remove overlap\n        textSelection.attr(\"y\", (d) => {\n          const textLabel = labelBoundsIndex[labelId(d)];\n          return textLabel.dy;\n        });\n      }\n    });\n\nexport const rulerLabelVerticalSeparate = (cAcc) => (g) => {\n  const THRESHOLD = 2;\n  const labelBounds = [];\n\n  // Reset vertical shift\n  g.selectAll(\"text\").each(function () {\n    select(this).attr(\"y\", \"\");\n  });\n\n  // Calculate bounds\n  g.selectAll(\".sszvis-ruler__label\").each(function (d) {\n    const bounds = this.getBoundingClientRect();\n    labelBounds.push({\n      category: cAcc(d),\n      top: bounds.top,\n      bottom: bounds.bottom,\n      dy: 0,\n    });\n  });\n\n  // Sort by vertical position (only supports labels of same height)\n  labelBounds.sort((a, b) => ascending(a.top, b.top));\n\n  // Calculate overlap and correct position\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < labelBounds.length; j++) {\n      for (let k = j + 1; k < labelBounds.length; k++) {\n        if (j === k) continue;\n        const firstLabel = labelBounds[j];\n        const secondLabel = labelBounds[k];\n        const overlap = firstLabel.bottom - secondLabel.top;\n        if (overlap >= THRESHOLD) {\n          firstLabel.bottom -= overlap / 2;\n          firstLabel.top -= overlap / 2;\n          firstLabel.dy -= overlap / 2;\n          secondLabel.bottom += overlap / 2;\n          secondLabel.top += overlap / 2;\n          secondLabel.dy += overlap / 2;\n        }\n      }\n    }\n  }\n\n  // Shift vertically to remove overlap\n  g.selectAll(\"text\").each(function (d) {\n    const label = fn.find((l) => l.category === cAcc(d), labelBounds);\n    if (label) {\n      select(this).attr(\"y\", label.dy);\n    }\n  });\n};\n"],"names":["annotationRuler","component","prop","fn","label","flip","reduceOverlap","render","data","selection","select","props","labelId","d","x","y","ruler","selectAll","join","classed","attr","halfPixel","bottom","dot","color","crispX","crispY","textSelection","dx","dy","top","translateString","style","html","THRESHOLD","ITERATIONS","labelBounds","labelBoundsIndex","each","bounds","getBoundingClientRect","item","push","sort","a","b","ascending","index","firstLabel","entries","secondLabel","slice","overlap","offset","textLabel","rulerLabelVerticalSeparate","cAcc","g","category","i","j","length","k","l"],"mappings":"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"}