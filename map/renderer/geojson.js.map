{"version":3,"file":"geojson.js","sources":["../../../src/map/renderer/geojson.js"],"sourcesContent":["/**\n * geojson renderer component\n *\n * @module sszvis/map/renderer/geojson\n *\n * A component used for rendering overlays of geojson above map layers.\n * It can be used to render any arbitrary GeoJson.\n *\n * @property {string} dataKeyName           The keyname in the data which will be used to match data entities\n *                                          with geographic entities. Default 'geoId'.\n * @property {string} geoJsonKeyName        The keyname in the geoJson which will be used to match map entities\n *                                          with data entities. Default 'id'.\n * @property {GeoJson} geoJson              The GeoJson object which should be rendered. Needs to have a 'features' property.\n * @property {d3.geo.path} mapPath          A path generator for drawing the GeoJson as SVG Path elements.\n * @property {Function, Boolean} defined    A function which, when given a data value, returns whether or not data in that value is defined.\n * @property {Function, String} fill        A function that returns a string, or a string, for the fill color of the GeoJson entities. Default black.\n * @property {String} stroke                The stroke color of the entities. Can be a string or a function returning a string. Default black.\n * @property {Number} strokeWidth           The thickness of the strokes of the shapes. Can be a number or a function returning a number. Default 1.25.\n * @property {Boolean} transitionColor      Whether or not to transition the fill color of the geojson when it changes. Default true.\n *\n * @return {sszvis.component}\n */\n\nimport { dispatch, geoCentroid, select } from \"d3\";\nimport tooltipAnchor from \"../../annotation/tooltipAnchor.js\";\nimport { component } from \"../../d3-component.js\";\nimport * as fn from \"../../fn.js\";\nimport { mapMissingValuePattern } from \"../../patterns.js\";\nimport ensureDefsElement from \"../../svgUtils/ensureDefsElement.js\";\nimport { slowTransition } from \"../../transition.js\";\nimport { GEO_KEY_DEFAULT } from \"../mapUtils.js\";\n\nexport default function () {\n  const event = dispatch(\"over\", \"out\", \"click\");\n\n  const geojsonComponent = component()\n    .prop(\"dataKeyName\")\n    .dataKeyName(GEO_KEY_DEFAULT)\n    .prop(\"geoJsonKeyName\")\n    .geoJsonKeyName(\"id\")\n    .prop(\"geoJson\")\n    .prop(\"mapPath\")\n    .prop(\"defined\", fn.functor)\n    .defined(true)\n    .prop(\"fill\", fn.functor)\n    .fill(\"black\")\n    .prop(\"stroke\", fn.functor)\n    .stroke(\"black\")\n    .prop(\"strokeWidth\", fn.functor)\n    .strokeWidth(1.25)\n    .prop(\"transitionColor\")\n    .transitionColor(true)\n    .render(function (data) {\n      const selection = select(this);\n      const props = selection.props();\n\n      // render the missing value pattern\n      ensureDefsElement(selection, \"pattern\", \"missing-pattern\").call(mapMissingValuePattern);\n\n      // getDataKeyName will be called on data values. It should return a map entity id.\n      // getMapKeyName will be called on the 'properties' of each map feature. It should\n      // return a map entity id. Data values are matched with corresponding map features using\n      // these entity ids.\n      const getDataKeyName = fn.prop(props.dataKeyName);\n      const getMapKeyName = fn.prop(props.geoJsonKeyName);\n\n      const groupedInputData = data.reduce((m, v) => {\n        m[getDataKeyName(v)] = v;\n        return m;\n      });\n\n      const mergedData = props.geoJson.features.map((feature) => ({\n        geoJson: feature,\n        datum: groupedInputData[getMapKeyName(feature.properties)],\n      }));\n\n      function getMapFill(d) {\n        return fn.defined(d.datum) && props.defined(d.datum)\n          ? props.fill(d.datum)\n          : \"url(#missing-pattern)\";\n      }\n\n      function getMapStroke(d) {\n        return fn.defined(d.datum) && props.defined(d.datum) ? props.stroke(d.datum) : \"\";\n      }\n\n      const geoElements = selection\n        .selectAll(\".sszvis-map__geojsonelement\")\n        .data(mergedData)\n        .join(\"path\")\n        .classed(\"sszvis-map__geojsonelement\", true)\n        .attr(\"data-event-target\", \"\")\n        .attr(\"fill\", getMapFill);\n\n      selection.selectAll(\".sszvis-map__geojsonelement--undefined\").attr(\"fill\", getMapFill);\n\n      geoElements\n        .classed(\n          \"sszvis-map__geojsonelement--undefined\",\n          (d) => !fn.defined(d.datum) || !props.defined(d.datum)\n        )\n        .attr(\"d\", (d) => props.mapPath(d.geoJson));\n\n      if (props.transitionColor) {\n        geoElements.transition().call(slowTransition).attr(\"fill\", getMapFill);\n      } else {\n        geoElements.attr(\"fill\", getMapFill);\n      }\n\n      geoElements.attr(\"stroke\", getMapStroke).attr(\"stroke-width\", props.strokeWidth);\n\n      selection\n        .selectAll(\"[data-event-target]\")\n        .on(\"mouseover\", (d) => {\n          event.over(d.datum);\n        })\n        .on(\"mouseout\", (d) => {\n          event.out(d.datum);\n        })\n        .on(\"click\", (d) => {\n          event.click(d.datum);\n        });\n\n      // the tooltip anchor generator\n      const ta = tooltipAnchor().position((d) => {\n        d.geoJson.properties || (d.geoJson.properties = {});\n\n        let sphericalCentroid = d.geoJson.properties.sphericalCentroid;\n        if (!sphericalCentroid) {\n          d.geoJson.properties.sphericalCentroid = sphericalCentroid = geoCentroid(d.geoJson);\n        }\n\n        return props.mapPath.projection()(sphericalCentroid);\n      });\n\n      const tooltipGroup = selection.selectGroup(\"tooltipAnchors\").datum(mergedData);\n\n      // attach tooltip anchors\n      tooltipGroup.call(ta);\n    });\n\n  geojsonComponent.on = function () {\n    const value = event.on.apply(event, arguments);\n    return value === event ? geojsonComponent : value;\n  };\n\n  return geojsonComponent;\n}\n"],"names":["event","dispatch","geojsonComponent","component","prop","dataKeyName","GEO_KEY_DEFAULT","geoJsonKeyName","fn","defined","fill","stroke","strokeWidth","transitionColor","render","data","selection","select","props","ensureDefsElement","call","mapMissingValuePattern","getDataKeyName","getMapKeyName","groupedInputData","reduce","m","v","mergedData","geoJson","features","map","feature","datum","properties","getMapFill","d","getMapStroke","geoElements","selectAll","join","classed","attr","mapPath","transition","slowTransition","on","over","out","click","ta","tooltipAnchor","position","sphericalCentroid","geoCentroid","projection","tooltipGroup","selectGroup","value","apply","arguments"],"mappings":"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"}