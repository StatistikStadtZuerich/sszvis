{"version":3,"file":"ordinalColorScale.js","sources":["../../src/legend/ordinalColorScale.js"],"sourcesContent":["/**\n * Ordinal Color Scale Legend\n *\n * This component is used for creating a legend for a categorical color scale.\n *\n * @module sszvis/legend/ordinalColorScale\n *\n * @property {d3.scaleOrdinal()} scale         An ordinal scale which will be transformed into the legend.\n * @property {Number} rowHeight                 The height of the rows of the legend.\n * @property {Number} columnWidth               The width of the columns of the legend.\n * @property {Number} rows                      The target number of rows for the legend.\n * @property {Number} columns                    The target number of columns for the legend.\n * @property {String} orientation               The orientation (layout order) of the legend. should be either \"horizontal\" or \"vertical\". No default.\n * @property {Boolean} reverse                  Whether to reverse the order that categories appear in the legend. Default false\n * @property {Boolean} rightAlign               Whether to right-align the legend. Default false.\n * @property {Boolean} horizontalFloat          A true value changes the legend layout to the horizontal float version. Default false.\n * @property {Number} floatPadding              The amount of padding between elements in the horizontal float layout. Default 10px\n * @property {Number} floatWidth                The maximum width of the horizontal float layout. Default 600px\n *\n * The color legend works by iterating over the domain of the provided scale, and generating a legend entry for each\n * element in the domain. The entry consists of a label giving the category, and a circle colored with the category's\n * corresponding color. When props.rightAlign is false (the default), the circle comes before the name. When rightAlign\n * is true, the circle comes afterwards. The layout of these labels is governed by the other parameters.\n *\n * Default Layout:\n *\n * Because the labels are svg elements positioned with translate (and do not use the html box model layout algorithm),\n * rowHeight is necessary to provide the vertical height of each row. Generally speaking, 20px is fine for the default text size.\n * In the default layout, labels are organized into rows and columns in a gridded fashion. columnWidth is the total width of\n * any resulting columns. Note that if there is only one column, columnWidth is irrelevant.\n *\n * There are two orientation options for the row/column layout. The 'horizontal' orientation lays out elements from the input\n * domain into rows, creating new rows as necessary. For example, with three columns, the first three elements will form\n * the top row, then the next three in the second row, and so on. With 'vertical' orientation, labels are stacked into a column,\n * and new columns are added as necessary to hold all of the elements. Therefore, in the 'horizontal' orientation, the number of columns\n * is key, as this determines when a row ends and a new row begins. In the 'vertical' layout, the number of rows determines when to start\n * a new column.\n *\n * For the input set { A, B, C, D, E, F, G }\n *\n * Horizontal Orientation (3 columns):\n *\n *      A    B    C\n *      D    E    F\n *      G\n *\n * Horizontal Orientation (2 columns):\n *\n *     A    B\n *     C    D\n *     E    F\n *     G\n *\n * Vertical Orientation (3 rows):\n *\n *      A    D    G\n *      B    E\n *      C    F\n *\n * Vertical Orientation (2 rows):\n *\n *      A    C    E    G\n *      B    D    F\n *\n * If reverse is true, items from the input domain will be added to the layout in reversed order.\n *\n * For example, Horizontal Orientation (4 columns, reverse = true):\n *\n *    G    F    E    D\n *    C    B    A\n *\n * Horizontal Float Layout:\n *\n * If horizontalFloat is true, a different layout entirely is used, which relies on the width of each element\n * to compute the position of the next one. This layout always proceeds left-to-right first, then top-to-bottom\n * if the floatWidth would be exceeded by a new element. Between each element is an amount of padding configurable\n * using the floatPadding property.\n *\n * For the input set { foo, bar, qux, fooBar, baz, fooBarBaz, fooBaz, barFoo }\n *\n * Horizontal Float Layout (within a floatWidth identified by vertical pipes,\n * with 4 spaces of floatPadding).\n *\n * |foo    bar    qux|\n * |fooBar    baz    |      <--- not enough space for fooBarBaz\n * |fooBarBaz        |      <--- not enough space for padding + fooBaz\n * |fooBaz    barFoo |\n */\n\nimport { select } from \"d3\";\nimport { component } from \"../d3-component.js\";\nimport { halfPixel } from \"../svgUtils/crisp.js\";\nimport translateString from \"../svgUtils/translateString.js\";\n\nexport const DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT = 21;\n\nexport function legendColorOrdinal() {\n  return component()\n    .prop(\"scale\")\n    .prop(\"rowHeight\")\n    .rowHeight(DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT)\n    .prop(\"columnWidth\")\n    .columnWidth(200)\n    .prop(\"rows\")\n    .rows(3)\n    .prop(\"columns\")\n    .columns(3)\n    .prop(\"verticallyCentered\")\n    .verticallyCentered(false)\n    .prop(\"orientation\")\n    .prop(\"reverse\")\n    .reverse(false)\n    .prop(\"rightAlign\")\n    .rightAlign(false)\n    .prop(\"horizontalFloat\")\n    .horizontalFloat(false)\n    .prop(\"floatPadding\")\n    .floatPadding(20)\n    .prop(\"floatWidth\")\n    .floatWidth(600)\n    .render(function () {\n      const selection = select(this);\n      const props = selection.props();\n\n      let domain = props.scale.domain();\n\n      if (props.reverse) {\n        domain = [...domain].reverse();\n      }\n\n      let rows, cols;\n      if (props.orientation === \"horizontal\") {\n        cols = Math.ceil(props.columns);\n        rows = Math.ceil(domain.length / cols);\n      } else if (props.orientation === \"vertical\") {\n        rows = Math.ceil(props.rows);\n        cols = Math.ceil(domain.length / rows);\n      }\n\n      const groups = selection\n        .selectAll(\".sszvis-legend--entry\")\n        .data(domain)\n        .join(\"g\")\n        .classed(\"sszvis-legend--entry\", true);\n\n      groups\n        .selectAll(\".sszvis-legend__mark\")\n        .data((d) => [d])\n        .join(\"circle\")\n        .classed(\"sszvis-legend__mark\", true)\n        .attr(\"cx\", props.rightAlign ? -6 : 6)\n        .attr(\"cy\", halfPixel(props.rowHeight / 2))\n        .attr(\"r\", 5)\n        .attr(\"fill\", (d) => props.scale(d))\n        .attr(\"stroke\", (d) => props.scale(d))\n        .attr(\"stroke-width\", 1);\n\n      groups\n        .selectAll(\".sszvis-legend__label\")\n        .data((d) => [d])\n        .join(\"text\")\n        .classed(\"sszvis-legend__label\", true)\n        .text((d) => d)\n        .attr(\"dy\", \"0.35em\") // vertically-center\n        .style(\"text-anchor\", () => (props.rightAlign ? \"end\" : \"start\"))\n        .attr(\"transform\", () => {\n          const x = props.rightAlign ? -18 : 18;\n          const y = halfPixel(props.rowHeight / 2);\n          return translateString(x, y);\n        });\n\n      let verticalOffset = \"\";\n      if (props.verticallyCentered) {\n        verticalOffset = \"translate(0,\" + String(-((domain.length * props.rowHeight) / 2)) + \") \";\n      }\n\n      if (props.horizontalFloat) {\n        let rowPosition = 0,\n          horizontalPosition = 0;\n        groups.attr(\"transform\", function () {\n          // not affected by scroll position\n          const width = this.getBoundingClientRect().width;\n          if (horizontalPosition + width > props.floatWidth) {\n            rowPosition += props.rowHeight;\n            horizontalPosition = 0;\n          }\n          const translate = translateString(horizontalPosition, rowPosition);\n          horizontalPosition += width + props.floatPadding;\n          return verticalOffset + translate;\n        });\n      } else {\n        groups.attr(\"transform\", (d, i) => {\n          if (props.orientation === \"horizontal\") {\n            return (\n              verticalOffset +\n              \"translate(\" +\n              (i % cols) * props.columnWidth +\n              \",\" +\n              Math.floor(i / cols) * props.rowHeight +\n              \")\"\n            );\n          } else if (props.orientation === \"vertical\") {\n            return (\n              verticalOffset +\n              \"translate(\" +\n              Math.floor(i / rows) * props.columnWidth +\n              \",\" +\n              (i % rows) * props.rowHeight +\n              \")\"\n            );\n          }\n        });\n      }\n    });\n}\n"],"names":["DEFAULT_LEGEND_COLOR_ORDINAL_ROW_HEIGHT","legendColorOrdinal","component","prop","rowHeight","columnWidth","rows","columns","verticallyCentered","reverse","rightAlign","horizontalFloat","floatPadding","floatWidth","render","selection","select","props","domain","scale","cols","orientation","Math","ceil","length","groups","selectAll","data","join","classed","d","attr","halfPixel","text","style","x","y","translateString","verticalOffset","String","rowPosition","horizontalPosition","width","getBoundingClientRect","translate","i","floor"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOO,MAAMA,uCAAuC,GAAG;AAEhD,SAASC,kBAAkBA,GAAG;EACnC,OAAOC,SAAS,EAAE,CACfC,IAAI,CAAC,OAAO,CAAC,CACbA,IAAI,CAAC,WAAW,CAAC,CACjBC,SAAS,CAACJ,uCAAuC,CAAC,CAClDG,IAAI,CAAC,aAAa,CAAC,CACnBE,WAAW,CAAC,GAAG,CAAC,CAChBF,IAAI,CAAC,MAAM,CAAC,CACZG,IAAI,CAAC,CAAC,CAAC,CACPH,IAAI,CAAC,SAAS,CAAC,CACfI,OAAO,CAAC,CAAC,CAAC,CACVJ,IAAI,CAAC,oBAAoB,CAAC,CAC1BK,kBAAkB,CAAC,KAAK,CAAC,CACzBL,IAAI,CAAC,aAAa,CAAC,CACnBA,IAAI,CAAC,SAAS,CAAC,CACfM,OAAO,CAAC,KAAK,CAAC,CACdN,IAAI,CAAC,YAAY,CAAC,CAClBO,UAAU,CAAC,KAAK,CAAC,CACjBP,IAAI,CAAC,iBAAiB,CAAC,CACvBQ,eAAe,CAAC,KAAK,CAAC,CACtBR,IAAI,CAAC,cAAc,CAAC,CACpBS,YAAY,CAAC,EAAE,CAAC,CAChBT,IAAI,CAAC,YAAY,CAAC,CAClBU,UAAU,CAAC,GAAG,CAAC,CACfC,MAAM,CAAC,YAAY;AAClB,IAAA,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;AAC9B,IAAA,MAAMC,KAA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"}