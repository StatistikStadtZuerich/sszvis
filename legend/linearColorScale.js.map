{"version":3,"file":"linearColorScale.js","sources":["../../src/legend/linearColorScale.js"],"sourcesContent":["/**\n * Linear Color Scale Legend\n *\n * Use for displaying the values of a continuous linear color scale.\n *\n * @module sszvis/legend/linearColorScale\n *\n * @property {function} scale                   The scale to use to generate the legend\n * @property {array} displayValues              A list of specific values to display. If not specified, defaults to using scale.ticks\n * @property {number} width                     The pixel width of the legend (default 200).\n * @property {number} segments                  The number of segments to aim for. Note, this is only used if displayValues isn't specified,\n *                                              and then it is passed as the argument to scale.ticks for finding the ticks. (default)\n * @property {array} labelText                  Text or a text-returning function to use as the titles for the legend endpoints. If not supplied,\n *                                              defaults to using the first and last tick values.\n * @property {function} labelFormat             An optional formatter function for the end labels. Usually should be sszvis.formatNumber.\n */\n\nimport { select } from \"d3\";\n\nimport * as fn from \"../fn.js\";\nimport * as logger from \"../logger.js\";\nimport { component } from \"../d3-component.js\";\n\nexport default function () {\n  return component()\n    .prop(\"scale\")\n    .prop(\"displayValues\")\n    .displayValues([])\n    .prop(\"width\")\n    .width(200)\n    .prop(\"segments\")\n    .segments(8)\n    .prop(\"labelText\")\n    .prop(\"labelFormat\")\n    .labelFormat(fn.identity)\n    .render(function () {\n      const selection = select(this);\n      const props = selection.props();\n\n      if (!props.scale) {\n        logger.error(\"legend.linearColorScale - a scale must be specified.\");\n        return false;\n      }\n\n      const domain = props.scale.domain();\n\n      let values = props.displayValues;\n      if (values.length === 0 && props.scale.ticks) {\n        values = props.scale.ticks(props.segments - 1);\n      }\n      values.push(fn.last(domain));\n\n      // Avoid division by zero\n      const segWidth = values.length > 0 ? props.width / values.length : 0;\n      const segHeight = 10;\n\n      const segments = selection\n        .selectAll(\"rect.sszvis-legend__mark\")\n        .data(values)\n        .join(\"rect\")\n        .classed(\"sszvis-legend__mark\", true);\n\n      segments\n        .attr(\"x\", (d, i) => i * segWidth - 1) // The offsets here cover up half-pixel antialiasing artifacts\n        .attr(\"y\", 0)\n        .attr(\"width\", segWidth + 1) // The offsets here cover up half-pixel antialiasing artifacts\n        .attr(\"height\", segHeight)\n        .attr(\"fill\", (d) => props.scale(d));\n\n      const startEnd = [fn.first(domain), fn.last(domain)];\n      const labelText = props.labelText || startEnd;\n\n      // rounded end caps for the segments\n      const endCaps = selection\n        .selectAll(\"circle.ssvis-legend--mark\")\n        .data(startEnd)\n        .join(\"circle\")\n        .attr(\"class\", \"ssvis-legend--mark\");\n\n      endCaps\n        .attr(\"cx\", (d, i) => i * props.width)\n        .attr(\"cy\", segHeight / 2)\n        .attr(\"r\", segHeight / 2)\n        .attr(\"fill\", (d) => props.scale(d));\n\n      const labels = selection\n        .selectAll(\".sszvis-legend__label\")\n        .data(labelText)\n        .join(\"text\")\n        .classed(\"sszvis-legend__label\", true);\n\n      const labelPadding = 16;\n\n      labels\n        .style(\"text-anchor\", (d, i) => (i === 0 ? \"end\" : \"start\"))\n        .attr(\"dy\", \"0.35em\") // vertically-center\n        .attr(\n          \"transform\",\n          (d, i) =>\n            \"translate(\" +\n            (i * props.width + (i === 0 ? -1 : 1) * labelPadding) +\n            \", \" +\n            segHeight / 2 +\n            \")\"\n        )\n        .text((d, i) => props.labelFormat(d, i));\n    });\n}\n"],"names":["component","prop","displayValues","width","segments","labelFormat","fn","render","selection","select","props","scale","logger","domain","values","length","ticks","push","segWidth","segHeight","selectAll","data","join","classed","attr","d","i","startEnd","labelText","endCaps","labels","labelPadding","style","text"],"mappings":"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"}