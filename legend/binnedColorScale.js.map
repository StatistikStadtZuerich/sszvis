{"version":3,"file":"binnedColorScale.js","sources":["../../src/legend/binnedColorScale.js"],"sourcesContent":["/**\n * Binned Color Scale Legend\n *\n * Use for displaying the values of discontinuous (binned) color scale's bins\n *\n * @module sszvis/legend/binnedColorScale\n *\n * @param {function} scale              A scale to use to generate the color values\n * @param {array} displayValues         An array of values which should be displayed. Usually these should be the bin edges\n * @param {array} endpoints             The endpoints of the scale (note that these are not necessarily the first and last\n *                                      bin edges). These will become labels at either end of the legend.\n * @param {number} width                The pixel width of the legend. Default 200\n * @param {function} labelFormat        A formatter function for the labels of the displayValues.\n *\n * @return {sszvis.component}\n */\n\nimport { select, scaleLinear } from \"d3\";\n\nimport * as fn from \"../fn.js\";\nimport * as logger from \"../logger.js\";\nimport { halfPixel } from \"../svgUtils/crisp.js\";\nimport { component } from \"../d3-component.js\";\n\nexport default function () {\n  return component()\n    .prop(\"scale\")\n    .prop(\"displayValues\")\n    .prop(\"endpoints\")\n    .prop(\"width\")\n    .width(200)\n    .prop(\"labelFormat\")\n    .labelFormat(fn.identity)\n    .render(function () {\n      const selection = select(this);\n      const props = selection.props();\n\n      if (!props.scale) return logger.error(\"legend.binnedColorScale - a scale must be specified.\");\n      if (!props.displayValues)\n        return logger.error(\"legend.binnedColorScale - display values must be specified.\");\n      if (!props.endpoints)\n        return logger.error(\"legend.binnedColorScale - endpoints must be specified\");\n\n      const segHeight = 10;\n      const circleRad = segHeight / 2;\n      const innerRange = [0, props.width - 2 * circleRad];\n\n      const barWidth = scaleLinear().domain(props.endpoints).range(innerRange);\n      let sum = 0;\n      const rectData = [];\n      let pPrev = props.endpoints[0];\n      for (const p of props.displayValues) {\n        const w = barWidth(p) - sum;\n        const offset = sum % 1;\n        rectData.push({\n          x: Math.floor(circleRad + sum),\n          w: w + offset,\n          c: props.scale(pPrev),\n          p,\n        });\n        sum += w;\n        pPrev = p;\n      }\n\n      // add the final box (last display value - > endpoint)\n      rectData.push({\n        x: Math.floor(circleRad + sum),\n        w: innerRange[1] - sum,\n        c: props.scale(pPrev),\n      });\n\n      const circles = selection\n        .selectAll(\"circle.sszvis-legend__circle\")\n        .data(props.endpoints)\n        .join(\"circle\")\n        .classed(\"sszvis-legend__circle\", true);\n\n      circles\n        .attr(\"r\", circleRad)\n        .attr(\"cy\", circleRad)\n        .attr(\"cx\", (d, i) => (i === 0 ? circleRad : props.width - circleRad))\n        .attr(\"fill\", props.scale);\n\n      const segments = selection\n        .selectAll(\"rect.sszvis-legend__crispmark\")\n        .data(rectData)\n        .join(\"rect\")\n        .classed(\"sszvis-legend__crispmark\", true);\n\n      segments\n        .attr(\"x\", (d) => d.x)\n        .attr(\"y\", 0)\n        .attr(\"width\", (d) => d.w)\n        .attr(\"height\", segHeight)\n        .attr(\"fill\", (d) => d.c);\n\n      const lineData = rectData.slice(0, -1);\n\n      const lines = selection\n        .selectAll(\"line.sszvis-legend__crispmark\")\n        .data(lineData)\n        .join(\"line\")\n        .classed(\"sszvis-legend__crispmark\", true);\n\n      lines\n        .attr(\"x1\", (d) => halfPixel(d.x + d.w))\n        .attr(\"x2\", (d) => halfPixel(d.x + d.w))\n        .attr(\"y1\", segHeight + 1)\n        .attr(\"y2\", segHeight + 6)\n        .attr(\"stroke\", \"#B8B8B8\");\n\n      const labels = selection\n        .selectAll(\".sszvis-legend__axislabel\")\n        .data(lineData)\n        .join(\"text\")\n        .classed(\"sszvis-legend__axislabel\", true);\n\n      labels\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"transform\", (d) => \"translate(\" + (d.x + d.w) + \",\" + (segHeight + 20) + \")\")\n        .text((d) => props.labelFormat(d.p));\n    });\n}\n"],"names":["component","prop","width","labelFormat","fn","render","selection","select","props","scale","logger","displayValues","endpoints","segHeight","circleRad","innerRange","barWidth","scaleLinear","domain","range","sum","rectData","pPrev","p","w","offset","push","x","Math","floor","c","circles","selectAll","data","join","classed","attr","d","i","segments","lineData","slice","lines","halfPixel","labels","style","text"],"mappings":"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"}