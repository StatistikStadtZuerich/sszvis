{"version":3,"file":"bounds.js","sources":["../src/bounds.js"],"sourcesContent":["/**\n * Bounds\n *\n * Creates a bounds object to help with the construction of d3 charts\n * that follow the d3 margin convention. The result of this function\n * is consumed by sszvis.createSvgLayer and sszvis.createHtmlLayer.\n *\n * @module sszvis/bounds\n *\n * @see http://bl.ocks.org/mbostock/3019563\n *\n * @property {number} DEFAULT_WIDTH The default width used across all charts\n * @property {number} RATIO The default side length ratio\n *\n * @param {Object} bounds Specifies the bounds of a chart area. Valid properties are:\n *   @property {number} bounds.width The total width of the chart (default: DEFAULT_WIDTH)\n *   @property {number} bounds.height The total height of the chart (default: height / RATIO)\n *   @property {number} bounds.top Top padding (default: 0)\n *   @property {number} bounds.left Left padding (default: 1)\n *   @property {number} bounds.bottom Bottom padding (default: 0)\n *   @property {number} bounds.right Right padding (default: 1)\n * @param {string|d3.selection} [selection] A CSS selector or d3 selection that will be measured to\n *                                          automatically calculate the bounds width and height using\n *                                          the SSZVIS responsive aspect ratio calculation. Custom\n *                                          width and height settings have priority over these auto-\n *                                          matic calculations, so if they are defined, this argument\n *                                          has no effect.\n *                                          This argument is optional to maintain backwards compatibility.\n *\n * @return {Object}              The returned object will preserve the properties width and height, or give them default values\n *                               if unspecified. It will also contain 'innerWidth', which is the width minus left and right padding,\n *                               and 'innerHeight', which is the height minus top and bottom padding. And it includes a 'padding' sub-object,\n *                               which contains calculated or default values for top, bottom, left, and right padding.\n *                               Lastly, the object includes 'screenWidth' and 'screenHeight', which are occasionally used by responsive components.\n */\n\nimport { select } from \"d3\";\nimport { aspectRatioAuto } from \"./aspectRatio.js\";\nimport * as fn from \"./fn.js\";\nimport { measureDimensions } from \"./measure.js\";\n\nconst DEFAULT_WIDTH = 516;\n\nexport function bounds(arg1 /* bounds or selection */, arg2 /* [selection] */) {\n  let _bounds = null,\n    selection = null;\n  if (arguments.length === 0) {\n    _bounds = {};\n  } else if (arguments.length === 1) {\n    if (fn.isObject(arg1)) {\n      _bounds = arg1;\n    } else if (fn.isSelection(arg1)) {\n      _bounds = {};\n      selection = arg1;\n    } else {\n      _bounds = {};\n      selection = select(arg1);\n    }\n  } else {\n    _bounds = arg1;\n    selection = fn.isSelection(arg2) ? arg2 : select(arg2);\n  }\n\n  // All padding sides have default values\n  const padding = {\n    top: either(_bounds.top, 0),\n    right: either(_bounds.right, 1),\n    bottom: either(_bounds.bottom, 0),\n    left: either(_bounds.left, 1),\n  };\n\n  // Width is calculated as: _bounds.width (if provided) -> selection.getBoundingClientRect().width (if provided) -> DEFAULT_WIDTH\n  const dimensions = fn.defined(selection)\n    ? measureDimensions(selection)\n    : { width: DEFAULT_WIDTH };\n\n  const width = either(_bounds.width, dimensions.width);\n  const innerHeight = aspectRatioAuto(dimensions);\n  const height = either(_bounds.height, innerHeight + padding.top + padding.bottom);\n\n  return {\n    innerHeight: height - padding.top - padding.bottom,\n    innerWidth: width - padding.left - padding.right,\n    padding,\n    height,\n    width,\n    screenWidth: dimensions.screenWidth,\n    screenHeight: dimensions.screenHeight,\n  };\n}\n\nexport { DEFAULT_WIDTH };\n\n// This is the default aspect ratio. It is defined as: width / innerHeight\n// See the Offerte document for SSZVIS 1.3, and here: https://basecamp.com/1762663/projects/10790469/todos/212434984\n// To calculate the default innerHeight, do width / ASPECT_RATIO\n// @deprecated Since the responsive revisions, the default aspect ratio has changed,\n//             so that it is now responsive to the container width.\n//             This property is preserved for compatibility reasons.\nexport const RATIO = 16 / 9;\n\n/* Helper functions\n----------------------------------------------- */\nfunction either(val, fallback) {\n  return val === undefined ? fallback : val;\n}\n"],"names":["DEFAULT_WIDTH","bounds","arg1","arg2","_bounds","selection","arguments","length","fn","select","padding","top","either","right","bottom","left","dimensions","measureDimensions","width","innerHeight","aspectRatioAuto","height","innerWidth","screenWidth","screenHeight","RATIO","val","fallback","undefined"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,MAAMA,aAAa,GAAG;AAEf,SAASC,MAAMA,CAACC,IAAI,4BAA4BC,IAAI,oBAAoB;EAC7E,IAAIC,OAAO,GAAG,IAAI;AAChBC,IAAAA,SAAS,GAAG,IAAI;AAClB,EAAA,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1BH,OAAO,GAAG,EAAE;AACd,EAAA,CAAC,MAAM,IAAIE,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;AACjC,IAAA,IAAIC,QAAW,CAACN,IAAI,CAAC,EAAE;AACrBE,MAAAA,OAAO,GAAGF,IAAI;IAChB,CAAC,MAAM,IAAIM,WAAc,CAACN,IAAI,CAAC,EAAE;MAC/BE,OAAO,GAAG,EAAE;AACZC,MAAAA,SAAS,GAAGH,IAAI;AAClB,IAAA,CAAC,MAAM;MACLE,OAAO,GAAG,EAAE;AACZC,MAAAA,SAAS,GAAGI,MAAM,CAACP,IAAI,CAAC;AAC1B,IAAA;AACF,EAAA,CAAC,MAAM;AACLE,IAAAA,OAAO,GAAGF,IAAI;AACdG,IAAAA,SAAS,GAAGG,WAAc,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAGM,MAAM,CAACN,IAAI,CAAC;AACxD,EAAA;;AAEA;AACA,EAAA,MAAMO,OAAO,GAAG;IACdC,GAAG,EAAEC,MAAM,CAACR,OAAO,CAACO,GAAG,EAAE,CAAC,CAAC;IAC3BE,KAAK,EAAED,MAAM,CAACR,OAAO,CAACS,KAAK,EAAE,CAAC,CAAC;IAC/BC,MAAM,EAAEF,MAAM,CAACR,OAAO,CAACU,MAAM,EAAE,CAAC,CAAC;AACjCC,IAAAA,IAAI,EAAEH,MAAM,CAACR,OAAO,CAACW,IAAI,EAAE,CAAC;GAC7B;;AAED;AACA,EAAA,MAAMC,UAAU,GAAGR,OAAU,CAACH,SAAS,CAAC,GACpCY,iBAAiB,CAACZ,SAAS,CAAC,GAC5B;AAAEa,IAAAA,KAAK,EAAElB;GAAe;EAE5B,MAAMkB,KAAK,GAAGN,MAAM,CAACR,OAAO,CAACc,KAAK,EAAEF,UAAU,CAACE,KAAK,CAAC;AACrD,EAAA,MAAMC,WAAW,GAAGC,eAAe,CAACJ,UAAU,CAAC;AAC/C,EAAA,MAAMK,MAAM,GAAGT,MAAM,CAACR,OAAO,CAACiB,MAAM,EAAEF,WAAW,GAAGT,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACI,MAAM,CAAC;EAEjF,OAAO;IACLK,WAAW,EAAEE,MAAM,GAAGX,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACI,MAAM;IAClDQ,UAAU,EAAEJ,KAAK,GAAGR,OAAO,CAACK,IAAI,GAAGL,OAAO,CAACG,KAAK;IAChDH,OAAO;IACPW,MAAM;IACNH,KAAK;IACLK,WAAW,EAAEP,UAAU,CAACO,WAAW;IACnCC,YAAY,EAAER,UAAU,CAACQ;GAC1B;AACH;;AAIA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,KAAK,GAAG,EAAE,GAAG;;AAE1B;AACA;AACA,SAASb,MAAMA,CAACc,GAAG,EAAEC,QAAQ,EAAE;AAC7B,EAAA,OAAOD,GAAG,KAAKE,SAAS,GAAGD,QAAQ,GAAGD,GAAG;AAC3C;;;;"}